{
	"info": {
		"_postman_id": "a0376009-11c6-4965-80e5-1a6543b5bd85",
		"name": "CloudSDK Portal API",
		"description": "APIs that provide services for provisioning, monitoring, and history retrieval of various data elements of CloudSDK.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "portal",
			"item": [
				{
					"name": "customer",
					"item": [
						{
							"name": "Get access token - to be used as Bearer token header for all other API requests.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access-token\", data.access_token);",
											"tests[\"Successful POST requests\"] = responseCode.code === 200;",
											"tests[\"TokenType of correct type \"] = data.token_type === \"Bearer\";",
											"pm.globals.set(\"access-token\", data.access_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\",\n    \"refreshToken\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/management/v1/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"management",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/management/v1/oauth2/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"management",
												"v1",
												"oauth2",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/management/v1/oauth2/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"management",
												"v1",
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"access_token\": \"anim exercitation sed magn\",\n \"refresh_token\": \"amet\",\n \"id_token\": \"est Lorem\",\n \"token_type\": \"veniam ex do\",\n \"expires_in\": 31622080,\n \"idle_timeout\": -15265503,\n \"aclTemplate\": {\n  \"aclTemplate\": {\n   \"Read\": false,\n   \"ReadWrite\": false,\n   \"ReadWriteCreate\": false,\n   \"Delete\": false,\n   \"PortalLogin\": false\n  }\n }\n}"
								}
							]
						},
						{
							"name": "Get Customer By Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({ key: 'Authorization', value: 'Bearer ' +  pm.environment.get(\"access-token\")}) ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/customer?customerId=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"customer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "2",
											"description": "(Required) customer id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/customer?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"customer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -83316406,\n \"email\": \"HAUnbSqJLuyGoG@wQIFgohEFXlxXwyjduIet.qkd\",\n \"name\": \"dolore Lorem amet\",\n \"lastModifiedTimestamp\": 34772348,\n \"details\": {\n  \"autoProvisioning\": {\n   \"enabled\": true,\n   \"locationId\": 83456836,\n   \"equipmentProfileIdPerModel\": {}\n  }\n },\n \"createdTimestamp\": -38249182\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/customer?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"customer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Update Customer",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<integer>\",\n    \"email\": \"<email>\",\n    \"name\": \"<string>\",\n    \"lastModifiedTimestamp\": \"<integer>\",\n    \"details\": {\n        \"autoProvisioning\": {\n            \"enabled\": false,\n            \"locationId\": -40744179,\n            \"equipmentProfileIdPerModel\": {}\n        }\n    },\n    \"createdTimestamp\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"customer"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"email\": \"<email>\",\n    \"name\": \"<string>\",\n    \"lastModifiedTimestamp\": \"<integer>\",\n    \"details\": {\n        \"autoProvisioning\": {\n            \"enabled\": false,\n            \"locationId\": 88756460,\n            \"equipmentProfileIdPerModel\": {}\n        }\n    },\n    \"createdTimestamp\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<integer>\",\n \"email\": \"<email>\",\n \"name\": \"<string>\",\n \"lastModifiedTimestamp\": \"<integer>\",\n \"details\": {\n  \"autoProvisioning\": {\n   \"enabled\": false,\n   \"locationId\": 88756460,\n   \"equipmentProfileIdPerModel\": {}\n  }\n },\n \"createdTimestamp\": \"<integer>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"email\": \"<email>\",\n    \"name\": \"<string>\",\n    \"lastModifiedTimestamp\": \"<integer>\",\n    \"details\": {\n        \"autoProvisioning\": {\n            \"enabled\": false,\n            \"locationId\": 88756460,\n            \"equipmentProfileIdPerModel\": {}\n        }\n    },\n    \"createdTimestamp\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"customer"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						}
					]
				},
				{
					"name": "location",
					"item": [
						{
							"name": "Create new Location",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"locationType\": \"<string>\",\n    \"customerId\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<long>\",\n    \"details\": {\n        \"model_type\": \"<string>\",\n        \"countryCode\": \"CA\",\n        \"dailyActivityDetails\": {\n            \"SUNDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"MONDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"TUESDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"WEDNESDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"THURSDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"FRIDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"SATURDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            }\n        },\n        \"maintenanceWindow\": {\n            \"timezone\": \"<string>\",\n            \"timeBegin\": {\n                \"hour\": \"<integer>\",\n                \"minute\": \"<integer>\"\n            },\n            \"timeEnd\": {\n                \"hour\": \"<integer>\",\n                \"minute\": \"<integer>\"\n            },\n            \"daysOfWeek\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"rrmEnabled\": \"<boolean>\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								}
							]
						},
						{
							"name": "Get Location By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location?locationId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									],
									"query": [
										{
											"key": "locationId",
											"value": "<long>",
											"description": "(Required) location id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Update Location",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"locationType\": \"<string>\",\n    \"customerId\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<long>\",\n    \"details\": {\n        \"model_type\": \"<string>\",\n        \"countryCode\": \"CA\",\n        \"dailyActivityDetails\": {\n            \"SUNDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"MONDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"TUESDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"WEDNESDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"THURSDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"FRIDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            },\n            \"SATURDAY\": {\n                \"busyTime\": \"<string>\",\n                \"quietTime\": \"<string>\",\n                \"timezone\": \"<string>\",\n                \"lastBusySnapshot\": \"<long>\"\n            }\n        },\n        \"maintenanceWindow\": {\n            \"timezone\": \"<string>\",\n            \"timeBegin\": {\n                \"hour\": \"<integer>\",\n                \"minute\": \"<integer>\"\n            },\n            \"timeEnd\": {\n                \"hour\": \"<integer>\",\n                \"minute\": \"<integer>\"\n            },\n            \"daysOfWeek\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        \"rrmEnabled\": \"<boolean>\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								}
							]
						},
						{
							"name": "Delete Location",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location?locationId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									],
									"query": [
										{
											"key": "locationId",
											"value": "<long>",
											"description": "(Required) location id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								}
							]
						},
						{
							"name": "Get Locations By a set of ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location/inSet?locationIdSet=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location",
										"inSet"
									],
									"query": [
										{
											"key": "locationIdSet",
											"value": "",
											"description": "(Required) set of location ids"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/inSet?locationIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"inSet"
											],
											"query": [
												{
													"key": "locationIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/inSet?locationIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"inSet"
											],
											"query": [
												{
													"key": "locationIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"customerId\": 2,\n  \"locationType\": \"COUNTRY\",\n  \"name\": \"new location\"\n },\n {\n  \"customerId\": 2,\n  \"locationType\": \"COUNTRY\",\n  \"name\": \"new location\"\n }\n]"
								}
							]
						},
						{
							"name": "Get Locations By customerId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location/forCustomer?customerId=<long>&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<long>",
											"description": "(Required) customer id"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"customerId\": 2,\n   \"locationType\": \"COUNTRY\",\n   \"name\": \"new location\"\n  },\n  {\n   \"customerId\": 2,\n   \"locationType\": \"COUNTRY\",\n   \"name\": \"new location\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "equipment",
					"item": [
						{
							"name": "Create new Equipment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"inventoryId\": \"<string>\",\n    \"customerId\": \"<integer>\",\n    \"profileId\": \"<long>\",\n    \"name\": \"<string>\",\n    \"locationId\": \"<long>\",\n    \"details\": {\n        \"elementConfigVersion\": \"<string>\",\n        \"equipmentType\": \"<string>\",\n        \"deviceMode\": \"<string>\",\n        \"gettingIP\": \"<string>\",\n        \"staticIP\": \"<string>\",\n        \"staticIpMaskCidr\": \"<integer>\",\n        \"staticIpGw\": \"<string>\",\n        \"gettingDNS\": \"<string>\",\n        \"staticDnsIp1\": \"<string>\",\n        \"staticDnsIp2\": \"<string>\",\n        \"peerInfoList\": [\n            {\n                \"peerMAC\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"peerIP\": \"<string>\",\n                \"tunnel\": \"<string>\",\n                \"vlans\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"radiusSecret\": \"<string>\"\n            },\n            {\n                \"peerMAC\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"peerIP\": \"<string>\",\n                \"tunnel\": \"<string>\",\n                \"vlans\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"radiusSecret\": \"<string>\"\n            }\n        ],\n        \"deviceName\": \"<string>\",\n        \"locationData\": \"<string>\",\n        \"locallyConfiguredMgmtVlan\": \"<integer>\",\n        \"locallyConfigured\": \"<boolean>\",\n        \"deploymentType\": \"<string>\",\n        \"syntheticClientEnabled\": \"<boolean>\",\n        \"frameReportThrottleEnabled\": \"<boolean>\",\n        \"antennaType\": \"<string>\",\n        \"costSavingEventsEnabled\": \"<boolean>\",\n        \"forwardMode\": \"<string>\",\n        \"radioMap\": {\n            \"is5GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"is5GHzU\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"is5GHzL\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"is2dot4GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"advancedRadioMap\": {\n            \"is5GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            },\n            \"is5GHzU\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            },\n            \"is5GHzL\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            },\n            \"is2dot4GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            }\n        }\n    },\n    \"latitude\": \"<string>\",\n    \"longitude\": \"<string>\",\n    \"baseMacAddress\": {\n        \"model_type\": \"<string>\",\n        \"addressAsString\": \"<string>\"\n    },\n    \"serial\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get Equipment By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment?equipmentId=19",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "19",
											"description": "(Required) equipment id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								}
							]
						},
						{
							"name": "Update Equipment",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"inventoryId\": \"<string>\",\n    \"customerId\": \"<integer>\",\n    \"profileId\": \"<long>\",\n    \"name\": \"<string>\",\n    \"locationId\": \"<long>\",\n    \"details\": {\n        \"elementConfigVersion\": \"<string>\",\n        \"equipmentType\": \"<string>\",\n        \"deviceMode\": \"<string>\",\n        \"gettingIP\": \"<string>\",\n        \"staticIP\": \"<string>\",\n        \"staticIpMaskCidr\": \"<integer>\",\n        \"staticIpGw\": \"<string>\",\n        \"gettingDNS\": \"<string>\",\n        \"staticDnsIp1\": \"<string>\",\n        \"staticDnsIp2\": \"<string>\",\n        \"peerInfoList\": [\n            {\n                \"peerMAC\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"peerIP\": \"<string>\",\n                \"tunnel\": \"<string>\",\n                \"vlans\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"radiusSecret\": \"<string>\"\n            },\n            {\n                \"peerMAC\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"peerIP\": \"<string>\",\n                \"tunnel\": \"<string>\",\n                \"vlans\": [\n                    \"<byte>\",\n                    \"<byte>\"\n                ],\n                \"radiusSecret\": \"<string>\"\n            }\n        ],\n        \"deviceName\": \"<string>\",\n        \"locationData\": \"<string>\",\n        \"locallyConfiguredMgmtVlan\": \"<integer>\",\n        \"locallyConfigured\": \"<boolean>\",\n        \"deploymentType\": \"<string>\",\n        \"syntheticClientEnabled\": \"<boolean>\",\n        \"frameReportThrottleEnabled\": \"<boolean>\",\n        \"antennaType\": \"<string>\",\n        \"costSavingEventsEnabled\": \"<boolean>\",\n        \"forwardMode\": \"<string>\",\n        \"radioMap\": {\n            \"is5GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"is5GHzU\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"is5GHzL\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"is2dot4GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"channelNumber\": \"<integer>\",\n                \"manualChannelNumber\": \"<integer>\",\n                \"backupChannelNumber\": \"<integer>\",\n                \"bannedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"allowedChannels\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ],\n                \"rxCellSizeDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"probeResponseThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"eirpTxPower\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"perimeterDetectionEnabled\": \"<boolean>\",\n                \"bestAPSteerType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"deauthAttackDetection\": \"<boolean>\",\n                \"allowedChannelsPowerLevels\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"advancedRadioMap\": {\n            \"is5GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            },\n            \"is5GHzU\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            },\n            \"is5GHzL\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            },\n            \"is2dot4GHz\": {\n                \"radioType\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"radioAdminState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"fragmentationThresholdBytes\": \"<integer>\",\n                \"uapsdState\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"stationIsolation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"multicastRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"managementRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"bestApSettings\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"legacyBSSRate\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"dtimPeriod\": \"<integer>\",\n                \"deauthAttackDetection\": \"<boolean>\"\n            }\n        }\n    },\n    \"latitude\": \"<string>\",\n    \"longitude\": \"<string>\",\n    \"baseMacAddress\": {\n        \"model_type\": \"<string>\",\n        \"addressAsString\": \"<string>\"\n    },\n    \"serial\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								}
							]
						},
						{
							"name": "Delete Equipment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) equipment id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Update RRM related properties of Equipment in bulk",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"items\": [\n        {\n            \"equipmentId\": \"<long>\",\n            \"perRadioDetails\": {\n                \"is5GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzU\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzL\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is2dot4GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                }\n            }\n        },\n        {\n            \"equipmentId\": \"<long>\",\n            \"perRadioDetails\": {\n                \"is5GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzU\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzL\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is2dot4GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                }\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipment/rrmBulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment",
										"rrmBulk"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"items\": [\n        {\n            \"equipmentId\": \"<long>\",\n            \"perRadioDetails\": {\n                \"is5GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzU\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzL\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is2dot4GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                }\n            }\n        },\n        {\n            \"equipmentId\": \"<long>\",\n            \"perRadioDetails\": {\n                \"is5GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzU\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzL\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is2dot4GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                }\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/rrmBulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"rrmBulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"items\": [\n        {\n            \"equipmentId\": \"<long>\",\n            \"perRadioDetails\": {\n                \"is5GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzU\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzL\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is2dot4GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                }\n            }\n        },\n        {\n            \"equipmentId\": \"<long>\",\n            \"perRadioDetails\": {\n                \"is5GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzU\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is5GHzL\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                },\n                \"is2dot4GHz\": {\n                    \"channelNumber\": \"<integer>\",\n                    \"rxCellSizeDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"probeResponseThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"clientDisconnectThresholdDb\": {\n                        \"source\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        \"value\": {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    },\n                    \"dropInSnrPercentage\": \"<integer>\",\n                    \"minLoadFactor\": \"<integer>\"\n                }\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/rrmBulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"rrmBulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
								}
							]
						},
						{
							"name": "Get Equipment By a set of ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment/inSet?equipmentIdSet=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment",
										"inSet"
									],
									"query": [
										{
											"key": "equipmentIdSet",
											"value": "",
											"description": "(Required) set of equipment ids"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/inSet?equipmentIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"inSet"
											],
											"query": [
												{
													"key": "equipmentIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/inSet?equipmentIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"inSet"
											],
											"query": [
												{
													"key": "equipmentIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"equipmentType\": \"AP\",\n  \"customerId\": 2,\n  \"profileId\": 1,\n  \"locationId\": 2,\n  \"inventoryId\": \"example_ap\",\n  \"serial\": \"example_serial\",\n  \"name\": \"example AP\"\n },\n {\n  \"equipmentType\": \"AP\",\n  \"customerId\": 2,\n  \"profileId\": 1,\n  \"locationId\": 2,\n  \"inventoryId\": \"example_ap\",\n  \"serial\": \"example_serial\",\n  \"name\": \"example AP\"\n }\n]"
								}
							]
						},
						{
							"name": "Get Equipment By customerId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment/forCustomer?customerId=<long>&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<long>",
											"description": "(Required) customer id"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"equipmentType\": \"AP\",\n   \"customerId\": 2,\n   \"profileId\": 1,\n   \"locationId\": 2,\n   \"inventoryId\": \"example_ap\",\n   \"serial\": \"example_serial\",\n   \"name\": \"example AP\"\n  },\n  {\n   \"equipmentType\": \"AP\",\n   \"customerId\": 2,\n   \"profileId\": 1,\n   \"locationId\": 2,\n   \"inventoryId\": \"example_ap\",\n   \"serial\": \"example_serial\",\n   \"name\": \"example AP\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								}
							]
						},
						{
							"name": "Get Equipment for customerId, equipment type, and location id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment/forCustomerWithFilter?customerId=<long>&equipmentType=<string>&locationIds=&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment",
										"forCustomerWithFilter"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<long>",
											"description": "(Required) customer id"
										},
										{
											"key": "equipmentType",
											"value": "<string>"
										},
										{
											"key": "locationIds",
											"value": "",
											"description": "set of location ids"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/forCustomerWithFilter?customerId=<long>&equipmentType=<string>&locationIds=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"forCustomerWithFilter"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "equipmentType",
													"value": "<string>"
												},
												{
													"key": "locationIds",
													"value": ""
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/forCustomerWithFilter?customerId=<long>&equipmentType=<string>&locationIds=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"forCustomerWithFilter"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "equipmentType",
													"value": "<string>"
												},
												{
													"key": "locationIds",
													"value": ""
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"equipmentType\": \"AP\",\n   \"customerId\": 2,\n   \"profileId\": 1,\n   \"locationId\": 2,\n   \"inventoryId\": \"example_ap\",\n   \"serial\": \"example_serial\",\n   \"name\": \"example AP\"\n  },\n  {\n   \"equipmentType\": \"AP\",\n   \"customerId\": 2,\n   \"profileId\": 1,\n   \"locationId\": 2,\n   \"inventoryId\": \"example_ap\",\n   \"serial\": \"example_serial\",\n   \"name\": \"example AP\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								}
							]
						},
						{
							"name": "Get equipments by criteria matching on name or baseMacAddress",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment/searchByMacAndName?customerId=<integer>&criteria=<string>&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment",
										"searchByMacAndName"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "criteria",
											"value": "<string>",
											"description": "search criteria"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/searchByMacAndName?customerId=<integer>&criteria=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"searchByMacAndName"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "criteria",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"equipmentType\": \"AP\",\n   \"customerId\": 2,\n   \"profileId\": 1,\n   \"locationId\": 2,\n   \"inventoryId\": \"example_ap\",\n   \"serial\": \"example_serial\",\n   \"name\": \"example AP\"\n  },\n  {\n   \"equipmentType\": \"AP\",\n   \"customerId\": 2,\n   \"profileId\": 1,\n   \"locationId\": 2,\n   \"inventoryId\": \"example_ap\",\n   \"serial\": \"example_serial\",\n   \"name\": \"example AP\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/searchByMacAndName?customerId=<integer>&criteria=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"searchByMacAndName"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "criteria",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get default values for Equipment details for a specific equipment type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment/defaultDetails?equipmentType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment",
										"defaultDetails"
									],
									"query": [
										{
											"key": "equipmentType",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/defaultDetails?equipmentType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"defaultDetails"
											],
											"query": [
												{
													"key": "equipmentType",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"elementConfigVersion\": \"<string>\",\n \"equipmentType\": \"<string>\",\n \"deviceMode\": \"<string>\",\n \"gettingIP\": \"<string>\",\n \"staticIP\": \"<string>\",\n \"staticIpMaskCidr\": \"<integer>\",\n \"staticIpGw\": \"<string>\",\n \"gettingDNS\": \"<string>\",\n \"staticDnsIp1\": \"<string>\",\n \"staticDnsIp2\": \"<string>\",\n \"peerInfoList\": [\n  {\n   \"peerMAC\": [\n    \"<byte>\",\n    \"<byte>\"\n   ],\n   \"peerIP\": \"<string>\",\n   \"tunnel\": \"<string>\",\n   \"vlans\": [\n    \"<byte>\",\n    \"<byte>\"\n   ],\n   \"radiusSecret\": \"<string>\"\n  },\n  {\n   \"peerMAC\": [\n    \"<byte>\",\n    \"<byte>\"\n   ],\n   \"peerIP\": \"<string>\",\n   \"tunnel\": \"<string>\",\n   \"vlans\": [\n    \"<byte>\",\n    \"<byte>\"\n   ],\n   \"radiusSecret\": \"<string>\"\n  }\n ],\n \"deviceName\": \"<string>\",\n \"locationData\": \"<string>\",\n \"locallyConfiguredMgmtVlan\": \"<integer>\",\n \"locallyConfigured\": \"<boolean>\",\n \"deploymentType\": \"<string>\",\n \"syntheticClientEnabled\": \"<boolean>\",\n \"frameReportThrottleEnabled\": \"<boolean>\",\n \"antennaType\": \"<string>\",\n \"costSavingEventsEnabled\": \"<boolean>\",\n \"forwardMode\": \"<string>\",\n \"radioMap\": {\n  \"is5GHz\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"channelNumber\": \"<integer>\",\n   \"manualChannelNumber\": \"<integer>\",\n   \"backupChannelNumber\": \"<integer>\",\n   \"bannedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"allowedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"rxCellSizeDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"probeResponseThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"clientDisconnectThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eirpTxPower\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"perimeterDetectionEnabled\": \"<boolean>\",\n   \"bestAPSteerType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"deauthAttackDetection\": \"<boolean>\",\n   \"allowedChannelsPowerLevels\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"is5GHzU\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"channelNumber\": \"<integer>\",\n   \"manualChannelNumber\": \"<integer>\",\n   \"backupChannelNumber\": \"<integer>\",\n   \"bannedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"allowedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"rxCellSizeDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"probeResponseThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"clientDisconnectThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eirpTxPower\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"perimeterDetectionEnabled\": \"<boolean>\",\n   \"bestAPSteerType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"deauthAttackDetection\": \"<boolean>\",\n   \"allowedChannelsPowerLevels\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"is5GHzL\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"channelNumber\": \"<integer>\",\n   \"manualChannelNumber\": \"<integer>\",\n   \"backupChannelNumber\": \"<integer>\",\n   \"bannedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"allowedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"rxCellSizeDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"probeResponseThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"clientDisconnectThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eirpTxPower\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"perimeterDetectionEnabled\": \"<boolean>\",\n   \"bestAPSteerType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"deauthAttackDetection\": \"<boolean>\",\n   \"allowedChannelsPowerLevels\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"is2dot4GHz\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"channelNumber\": \"<integer>\",\n   \"manualChannelNumber\": \"<integer>\",\n   \"backupChannelNumber\": \"<integer>\",\n   \"bannedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"allowedChannels\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ],\n   \"rxCellSizeDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"probeResponseThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"clientDisconnectThresholdDb\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"eirpTxPower\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"perimeterDetectionEnabled\": \"<boolean>\",\n   \"bestAPSteerType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"deauthAttackDetection\": \"<boolean>\",\n   \"allowedChannelsPowerLevels\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  }\n },\n \"advancedRadioMap\": {\n  \"is5GHz\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"radioAdminState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"fragmentationThresholdBytes\": \"<integer>\",\n   \"uapsdState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"stationIsolation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"multicastRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"managementRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"bestApSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legacyBSSRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"dtimPeriod\": \"<integer>\",\n   \"deauthAttackDetection\": \"<boolean>\"\n  },\n  \"is5GHzU\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"radioAdminState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"fragmentationThresholdBytes\": \"<integer>\",\n   \"uapsdState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"stationIsolation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"multicastRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"managementRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"bestApSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legacyBSSRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"dtimPeriod\": \"<integer>\",\n   \"deauthAttackDetection\": \"<boolean>\"\n  },\n  \"is5GHzL\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"radioAdminState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"fragmentationThresholdBytes\": \"<integer>\",\n   \"uapsdState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"stationIsolation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"multicastRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"managementRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"bestApSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legacyBSSRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"dtimPeriod\": \"<integer>\",\n   \"deauthAttackDetection\": \"<boolean>\"\n  },\n  \"is2dot4GHz\": {\n   \"radioType\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"radioAdminState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"fragmentationThresholdBytes\": \"<integer>\",\n   \"uapsdState\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"stationIsolation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"multicastRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"managementRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"bestApSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"legacyBSSRate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"dtimPeriod\": \"<integer>\",\n   \"deauthAttackDetection\": \"<boolean>\"\n  }\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment/defaultDetails?equipmentType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment",
												"defaultDetails"
											],
											"query": [
												{
													"key": "equipmentType",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						}
					]
				},
				{
					"name": "profile",
					"item": [
						{
							"name": "Create new Profile",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"profileType\": \"<string>\",\n    \"customerId\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"childProfileIds\": [\n        \"<long>\",\n        \"<long>\"\n    ],\n    \"details\": {\n        \"model_type\": \"<string>\",\n        \"profileDescription\": \"<string>\",\n        \"bonjourServices\": [\n            {\n                \"vlanId\": \"<int16>\",\n                \"supportAllServices\": \"<boolean>\",\n                \"serviceNames\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"vlanId\": \"<int16>\",\n                \"supportAllServices\": \"<boolean>\",\n                \"serviceNames\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get Profile By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access-token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=129",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "129",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Update Profile",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"profileType\": \"<string>\",\n    \"customerId\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"childProfileIds\": [\n        \"<long>\",\n        \"<long>\"\n    ],\n    \"details\": {\n        \"model_type\": \"<string>\",\n        \"profileDescription\": \"<string>\",\n        \"bonjourServices\": [\n            {\n                \"vlanId\": \"<int16>\",\n                \"supportAllServices\": \"<boolean>\",\n                \"serviceNames\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"vlanId\": \"<int16>\",\n                \"supportAllServices\": \"<boolean>\",\n                \"serviceNames\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Delete Profile",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Get Profiles By a set of ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile/inSet?profileIdSet=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile",
										"inSet"
									],
									"query": [
										{
											"key": "profileIdSet",
											"value": "",
											"description": "(Required) set of profile ids"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/inSet?profileIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"inSet"
											],
											"query": [
												{
													"key": "profileIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n },\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/inSet?profileIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"inSet"
											],
											"query": [
												{
													"key": "profileIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get Profiles By customerId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile/forCustomer?customerId=<long>&profileType=&nameSubstring=<string>&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<long>",
											"description": "(Required) customer id"
										},
										{
											"key": "profileType",
											"value": "",
											"description": "profile type"
										},
										{
											"key": "nameSubstring",
											"value": "<string>"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/forCustomer?customerId=<long>&profileType=&nameSubstring=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "profileType",
													"value": ""
												},
												{
													"key": "nameSubstring",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"profileType\": \"equipment_ap\",\n   \"customerId\": 2,\n   \"name\": \"example AP profile\"\n  },\n  {\n   \"profileType\": \"equipment_ap\",\n   \"customerId\": 2,\n   \"name\": \"example AP profile\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/forCustomer?customerId=<long>&profileType=&nameSubstring=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "profileType",
													"value": ""
												},
												{
													"key": "nameSubstring",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get Profile and all its associated children",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile/withChildren?profileId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile",
										"withChildren"
									],
									"query": [
										{
											"key": "profileId",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/withChildren?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"withChildren"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n },\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/withChildren?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"withChildren"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get counts of equipment that use specified profiles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile/equipmentCounts?profileIdSet=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile",
										"equipmentCounts"
									],
									"query": [
										{
											"key": "profileIdSet",
											"value": "",
											"description": "(Required) set of profile ids"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/equipmentCounts?profileIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"equipmentCounts"
											],
											"query": [
												{
													"key": "profileIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/equipmentCounts?profileIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"equipmentCounts"
											],
											"query": [
												{
													"key": "profileIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"value1\": 45844126,\n  \"value2\": 52262447\n },\n {\n  \"value1\": -23996801,\n  \"value2\": -70755285\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "portal User",
					"item": [
						{
							"name": "Create new Portal User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get portal user By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									],
									"query": [
										{
											"key": "portalUserId",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Update PortalUser",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Delete PortalUser",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									],
									"query": [
										{
											"key": "portalUserId",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Get PortalUsers By a set of ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser/inSet?portalUserIdSet=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser",
										"inSet"
									],
									"query": [
										{
											"key": "portalUserIdSet",
											"value": "",
											"description": "(Required) set of portalUser ids"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/inSet?portalUserIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"inSet"
											],
											"query": [
												{
													"key": "portalUserIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/inSet?portalUserIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"inSet"
											],
											"query": [
												{
													"key": "portalUserIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<long>\",\n  \"customerId\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"roles\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n },\n {\n  \"id\": \"<long>\",\n  \"customerId\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"roles\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n }\n]"
								}
							]
						},
						{
							"name": "Get PortalUsers By customerId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser/forCustomer?customerId=<long>&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<long>",
											"description": "(Required) customer id"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"id\": \"<long>\",\n   \"customerId\": \"<integer>\",\n   \"username\": \"<string>\",\n   \"password\": \"<string>\",\n   \"roles\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"createdTimestamp\": \"<long>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"customerId\": \"<integer>\",\n   \"username\": \"<string>\",\n   \"password\": \"<string>\",\n   \"roles\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"createdTimestamp\": \"<long>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get portal user by user name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser/byUsernameOrNull?customerId=<integer>&username=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser",
										"byUsernameOrNull"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/byUsernameOrNull?customerId=<integer>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"byUsernameOrNull"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/byUsernameOrNull?customerId=<integer>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"byUsernameOrNull"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Get Portal Users for username",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser/usersForUsername?username=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser",
										"usersForUsername"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/usersForUsername?username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"usersForUsername"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<long>\",\n  \"customerId\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"roles\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n },\n {\n  \"id\": \"<long>\",\n  \"customerId\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"roles\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/usersForUsername?username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"usersForUsername"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						}
					]
				},
				{
					"name": "status",
					"item": [
						{
							"name": "Get all Status objects By customerId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/status/forCustomer?customerId=<integer>&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"status",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forCustomer?customerId=<integer>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"model_type\": \"Status\",\n   \"customerId\": -51821322,\n   \"equipmentId\": -95985166,\n   \"statusDataType\": \"PEERINFO\",\n   \"statusDetails\": {\n    \"model_type\": \"ActiveBSSIDs\",\n    \"statusDataType\": \"ACTIVE_BSSIDS\",\n    \"activeBSSIDs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   \"createdTimestamp\": 74138747,\n   \"lastModifiedTimestamp\": -10921415\n  },\n  {\n   \"model_type\": \"Status\",\n   \"customerId\": -94921014,\n   \"equipmentId\": 92726244,\n   \"statusDataType\": \"CUSTOMER_DASHBOARD\",\n   \"statusDetails\": {\n    \"model_type\": \"ActiveBSSIDs\",\n    \"statusDataType\": \"ACTIVE_BSSIDS\",\n    \"activeBSSIDs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   \"createdTimestamp\": -3311920,\n   \"lastModifiedTimestamp\": 49509175\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forCustomer?customerId=<integer>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get list of Statuses for customerId, set of equipment ids, and set of status data types.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/status/forCustomerWithFilter?customerId=<integer>&equipmentIds=&statusDataTypes=&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"status",
										"forCustomerWithFilter"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "equipmentIds",
											"value": "",
											"description": "Set of equipment ids. Empty or null means retrieve all equipment for the customer."
										},
										{
											"key": "statusDataTypes",
											"value": "",
											"description": "Set of status data types. Empty or null means retrieve all data types."
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forCustomerWithFilter?customerId=<integer>&equipmentIds=&statusDataTypes=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forCustomerWithFilter"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "statusDataTypes",
													"value": ""
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forCustomerWithFilter?customerId=<integer>&equipmentIds=&statusDataTypes=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forCustomerWithFilter"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "statusDataTypes",
													"value": ""
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"model_type\": \"Status\",\n   \"customerId\": -716119,\n   \"equipmentId\": -23333272,\n   \"statusDataType\": \"CLIENT_DETAILS\",\n   \"statusDetails\": {\n    \"model_type\": \"ActiveBSSIDs\",\n    \"statusDataType\": \"ACTIVE_BSSIDS\",\n    \"activeBSSIDs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   \"createdTimestamp\": -8097811,\n   \"lastModifiedTimestamp\": 43655011\n  },\n  {\n   \"model_type\": \"Status\",\n   \"customerId\": -620225,\n   \"equipmentId\": -11080071,\n   \"statusDataType\": \"FIRMWARE\",\n   \"statusDetails\": {\n    \"model_type\": \"ActiveBSSIDs\",\n    \"statusDataType\": \"ACTIVE_BSSIDS\",\n    \"activeBSSIDs\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   \"createdTimestamp\": 55509282,\n   \"lastModifiedTimestamp\": -81100692\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								}
							]
						},
						{
							"name": "Get all Status objects for a given customer equipment.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/status/forEquipment?customerId=<integer>&equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"status",
										"forEquipment"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) Equipment id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forEquipment?customerId=<integer>&equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forEquipment"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"model_type\": \"Status\",\n  \"customerId\": 70737451,\n  \"equipmentId\": 87305947,\n  \"statusDataType\": \"CLIENT_DETAILS\",\n  \"statusDetails\": {\n   \"model_type\": \"ActiveBSSIDs\",\n   \"statusDataType\": \"ACTIVE_BSSIDS\",\n   \"activeBSSIDs\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  \"createdTimestamp\": 58048300,\n  \"lastModifiedTimestamp\": 64547113\n },\n {\n  \"model_type\": \"Status\",\n  \"customerId\": -52336286,\n  \"equipmentId\": 63110885,\n  \"statusDataType\": \"CLIENT_DETAILS\",\n  \"statusDetails\": {\n   \"model_type\": \"ActiveBSSIDs\",\n   \"statusDataType\": \"ACTIVE_BSSIDS\",\n   \"activeBSSIDs\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  \"createdTimestamp\": -17035869,\n  \"lastModifiedTimestamp\": -93455766\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forEquipment?customerId=<integer>&equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forEquipment"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get Status objects for a given customer equipment ids and status data types.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/status/forEquipmentWithFilter?customerId=<integer>&equipmentIds=&statusDataTypes=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"status",
										"forEquipmentWithFilter"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "equipmentIds",
											"value": "",
											"description": "(Required) Set of equipment ids. Must not be empty or null."
										},
										{
											"key": "statusDataTypes",
											"value": "",
											"description": "Set of status data types. Empty or null means retrieve all data types."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forEquipmentWithFilter?customerId=<integer>&equipmentIds=&statusDataTypes=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forEquipmentWithFilter"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "statusDataTypes",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"model_type\": \"Status\",\n  \"customerId\": 70737451,\n  \"equipmentId\": 87305947,\n  \"statusDataType\": \"CLIENT_DETAILS\",\n  \"statusDetails\": {\n   \"model_type\": \"ActiveBSSIDs\",\n   \"statusDataType\": \"ACTIVE_BSSIDS\",\n   \"activeBSSIDs\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  \"createdTimestamp\": 58048300,\n  \"lastModifiedTimestamp\": 64547113\n },\n {\n  \"model_type\": \"Status\",\n  \"customerId\": -52336286,\n  \"equipmentId\": 63110885,\n  \"statusDataType\": \"CLIENT_DETAILS\",\n  \"statusDetails\": {\n   \"model_type\": \"ActiveBSSIDs\",\n   \"statusDataType\": \"ACTIVE_BSSIDS\",\n   \"activeBSSIDs\": [\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   ]\n  },\n  \"createdTimestamp\": -17035869,\n  \"lastModifiedTimestamp\": -93455766\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/status/forEquipmentWithFilter?customerId=<integer>&equipmentIds=&statusDataTypes=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"status",
												"forEquipmentWithFilter"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "statusDataTypes",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						}
					]
				},
				{
					"name": "client",
					"item": [
						{
							"name": "session",
							"item": [
								{
									"name": "Get list of Client sessions for customerId and a set of equipment/location ids. Equipment and locations filters are joined using logical AND operation.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/client/session/forCustomer?customerId=<integer>&equipmentIds=&locationIds=&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"session",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>",
													"description": "(Required) customer id"
												},
												{
													"key": "equipmentIds",
													"value": "",
													"description": "set of equipment ids. Empty or null means retrieve all equipment for the customer."
												},
												{
													"key": "locationIds",
													"value": "",
													"description": "set of location ids. Empty or null means retrieve for all locations for the customer."
												},
												{
													"key": "sortBy",
													"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
													"description": "sort options"
												},
												{
													"key": "sortBy",
													"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
													"description": "sort options"
												},
												{
													"key": "paginationContext",
													"value": "",
													"description": "(Required) pagination context"
												}
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/client/session/forCustomer?customerId=<integer>&equipmentIds=&locationIds=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"client",
														"session",
														"forCustomer"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														},
														{
															"key": "equipmentIds",
															"value": ""
														},
														{
															"key": "locationIds",
															"value": ""
														},
														{
															"key": "sortBy",
															"value": "[object Object]"
														},
														{
															"key": "sortBy",
															"value": "[object Object]"
														},
														{
															"key": "paginationContext",
															"value": ""
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/client/session/forCustomer?customerId=<integer>&equipmentIds=&locationIds=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"client",
														"session",
														"forCustomer"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														},
														{
															"key": "equipmentIds",
															"value": ""
														},
														{
															"key": "locationIds",
															"value": ""
														},
														{
															"key": "sortBy",
															"value": "[object Object]"
														},
														{
															"key": "sortBy",
															"value": "[object Object]"
														},
														{
															"key": "paginationContext",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"items\": [\n  {\n   \"macAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"customerId\": 30983162,\n   \"equipmentId\": -30153147,\n   \"details\": {\n    \"sessionId\": -96995279,\n    \"authTimestamp\": -22467762,\n    \"assocTimestamp\": 66470256,\n    \"assocInternalSC\": -84559436,\n    \"ipTimestamp\": 17096349,\n    \"disconnectByApTimestamp\": 16613575,\n    \"disconnectByClientTimestamp\": -382511,\n    \"timeoutTimestamp\": -37943883,\n    \"firstDataSentTimestamp\": -48494146,\n    \"firstDataRcvdTimestamp\": -10341278,\n    \"ipAddress\": \"sed commodo Lorem dolore\",\n    \"radiusUsername\": \"\",\n    \"ssid\": \"culpa Lorem non labore\",\n    \"radioType\": \"is5GHzU\",\n    \"lastEventTimestamp\": 61816028,\n    \"hostname\": \"mollit eiusmod dolore culpa\",\n    \"apFingerprint\": \"aliquip\",\n    \"userAgentStr\": \"adipisicing laborum eiusmod\",\n    \"lastRxTimestamp\": 56899367,\n    \"lastTxTimestamp\": 26043332,\n    \"cpUsername\": \"esse\",\n    \"dhcpDetails\": {\n     \"dhcpServerIp\": \"voluptate consectetur\",\n     \"primaryDns\": \"exercitatio\",\n     \"secondaryDns\": \"irure aute sunt amet\",\n     \"subnetMask\": \"veniam ad in ut\",\n     \"gatewayIp\": \"irure\",\n     \"leaseStartTimestamp\": 81470754,\n     \"leaseTimeInSeconds\": -83780590,\n     \"firstRequestTimestamp\": -11368763,\n     \"firstOfferTimestamp\": 33121840,\n     \"firstDiscoverTimestamp\": 91211233,\n     \"nakTimestamp\": 31013425,\n     \"fromInternal\": false\n    },\n    \"eapDetails\": {\n     \"eapKey1Timestamp\": -20756050,\n     \"eapKey2Timestamp\": -69278424,\n     \"eapKey3Timestamp\": 18126466,\n     \"eapKey4Timestamp\": 27876830,\n     \"requestIdentityTimestamp\": -73653983,\n     \"eapNegotiationStartTimestamp\": 94011539,\n     \"eapSuccessTimestamp\": -20435205\n    },\n    \"metricDetails\": {\n     \"rxBytes\": -51595938,\n     \"txBytes\": 26788959,\n     \"totalRxPackets\": -98064180,\n     \"totalTxPackets\": -81079969,\n     \"rxMbps\": 17430722.374687105,\n     \"txMbps\": -6671912.860519931,\n     \"rssi\": -47088905,\n     \"snr\": -64010721,\n     \"rxRateKbps\": -90811190,\n     \"txRateKbps\": -35362244,\n     \"lastMetricTimestamp\": -79504971,\n     \"lastRxTimestamp\": 25511776,\n     \"lastTxTimestamp\": 23686902,\n     \"classification\": \"in sit\",\n     \"txDataFrames\": 42925917,\n     \"txDataFramesRetried\": -49133286,\n     \"rxDataFrames\": 57647169\n    },\n    \"isReassociation\": false,\n    \"disconnectByApReasonCode\": 22933761,\n    \"disconnectByClientReasonCode\": 84642645,\n    \"disconnectByApInternalReasonCode\": -31242260,\n    \"disconnectByClientInternalReasonCode\": -8082782,\n    \"portEnabledTimestamp\": 9712083,\n    \"is11RUsed\": false,\n    \"is11KUsed\": true,\n    \"is11VUsed\": false,\n    \"securityType\": \"RADIUS\",\n    \"steerType\": \"steer_deauth\",\n    \"previousValidSessionId\": -24028639,\n    \"lastFailureDetails\": {\n     \"failureTimestamp\": -51129938,\n     \"reasonCode\": -65054505,\n     \"reason\": \"cupidatat culpa\"\n    },\n    \"firstFailureDetails\": {\n     \"failureTimestamp\": -71060740,\n     \"reasonCode\": 30613749,\n     \"reason\": \"dolor qui laboris\"\n    },\n    \"associationStatus\": 38332803,\n    \"dynamicVlan\": 26512788,\n    \"assocRssi\": 33084947,\n    \"priorSessionId\": -37602994,\n    \"priorEquipmentId\": -61749061,\n    \"classificationName\": \"sunt voluptate\",\n    \"associationState\": \"Cloud_Timeout\"\n   },\n   \"lastModifiedTimestamp\": -3645759\n  },\n  {\n   \"macAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"customerId\": -5562768,\n   \"equipmentId\": -96913497,\n   \"details\": {\n    \"sessionId\": 54211530,\n    \"authTimestamp\": -88720900,\n    \"assocTimestamp\": 64658907,\n    \"assocInternalSC\": -94507503,\n    \"ipTimestamp\": 48164563,\n    \"disconnectByApTimestamp\": -34167694,\n    \"disconnectByClientTimestamp\": 36156197,\n    \"timeoutTimestamp\": -51624008,\n    \"firstDataSentTimestamp\": 34431856,\n    \"firstDataRcvdTimestamp\": 42883708,\n    \"ipAddress\": \"elit nulla\",\n    \"radiusUsername\": \"Duis reprehenderit ullamco\",\n    \"ssid\": \"amet consequat sed mollit\",\n    \"radioType\": \"is5GHzL\",\n    \"lastEventTimestamp\": -73360630,\n    \"hostname\": \"ad proident Ut\",\n    \"apFingerprint\": \"Excepteur\",\n    \"userAgentStr\": \"nulla sunt ut\",\n    \"lastRxTimestamp\": 43520319,\n    \"lastTxTimestamp\": 23661284,\n    \"cpUsername\": \"nulla ut nisi\",\n    \"dhcpDetails\": {\n     \"dhcpServerIp\": \"voluptate\",\n     \"primaryDns\": \"reprehenderit\",\n     \"secondaryDns\": \"minim ut sint mollit proident\",\n     \"subnetMask\": \"anim officia tempor\",\n     \"gatewayIp\": \"fugiat\",\n     \"leaseStartTimestamp\": 10854356,\n     \"leaseTimeInSeconds\": 79719787,\n     \"firstRequestTimestamp\": -4733173,\n     \"firstOfferTimestamp\": -9125828,\n     \"firstDiscoverTimestamp\": -47528147,\n     \"nakTimestamp\": 61391563,\n     \"fromInternal\": true\n    },\n    \"eapDetails\": {\n     \"eapKey1Timestamp\": -87412996,\n     \"eapKey2Timestamp\": -45987941,\n     \"eapKey3Timestamp\": -69680240,\n     \"eapKey4Timestamp\": 26385532,\n     \"requestIdentityTimestamp\": 27020075,\n     \"eapNegotiationStartTimestamp\": -57336033,\n     \"eapSuccessTimestamp\": -29911350\n    },\n    \"metricDetails\": {\n     \"rxBytes\": -55959583,\n     \"txBytes\": 84057725,\n     \"totalRxPackets\": -83242862,\n     \"totalTxPackets\": 7803114,\n     \"rxMbps\": -45319598.27264447,\n     \"txMbps\": 15470838.57670702,\n     \"rssi\": 11302570,\n     \"snr\": 80495236,\n     \"rxRateKbps\": -39698777,\n     \"txRateKbps\": 19698999,\n     \"lastMetricTimestamp\": -89129184,\n     \"lastRxTimestamp\": 2588545,\n     \"lastTxTimestamp\": -45003164,\n     \"classification\": \"ut velit id\",\n     \"txDataFrames\": 47862847,\n     \"txDataFramesRetried\": 68375871,\n     \"rxDataFrames\": -23706858\n    },\n    \"isReassociation\": true,\n    \"disconnectByApReasonCode\": -90863200,\n    \"disconnectByClientReasonCode\": 90810447,\n    \"disconnectByApInternalReasonCode\": 31324016,\n    \"disconnectByClientInternalReasonCode\": 59938061,\n    \"portEnabledTimestamp\": -52684768,\n    \"is11RUsed\": true,\n    \"is11KUsed\": false,\n    \"is11VUsed\": false,\n    \"securityType\": \"PSK\",\n    \"steerType\": \"steer_perimeter\",\n    \"previousValidSessionId\": -95737679,\n    \"lastFailureDetails\": {\n     \"failureTimestamp\": -32145249,\n     \"reasonCode\": 15261176,\n     \"reason\": \"ullamco fugiat\"\n    },\n    \"firstFailureDetails\": {\n     \"failureTimestamp\": -67481533,\n     \"reasonCode\": 21828660,\n     \"reason\": \"enim amet elit\"\n    },\n    \"associationStatus\": -45720122,\n    \"dynamicVlan\": 71571910,\n    \"assocRssi\": -76165104,\n    \"priorSessionId\": -57583477,\n    \"priorEquipmentId\": 47907355,\n    \"classificationName\": \"consectetur aute ut voluptate\",\n    \"associationState\": \"Valid_Ip\"\n   },\n   \"lastModifiedTimestamp\": -25597605\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
										}
									]
								},
								{
									"name": "Get list of Client sessions for customerId and a set of client MAC addresses.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/client/session/inSet?customerId=<integer>&clientMacs=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"session",
												"inSet"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>",
													"description": "(Required) customer id"
												},
												{
													"key": "clientMacs",
													"value": "",
													"description": "(Required) Set of client MAC addresses."
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/client/session/inSet?customerId=<integer>&clientMacs=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"client",
														"session",
														"inSet"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														},
														{
															"key": "clientMacs",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"macAddress\": {\n   \"model_type\": \"<string>\",\n   \"addressAsString\": \"<string>\"\n  },\n  \"customerId\": 95341789,\n  \"equipmentId\": -23449651,\n  \"details\": {\n   \"sessionId\": 93834736,\n   \"authTimestamp\": 7427682,\n   \"assocTimestamp\": 37475778,\n   \"assocInternalSC\": -1952821,\n   \"ipTimestamp\": 39697222,\n   \"disconnectByApTimestamp\": -19847666,\n   \"disconnectByClientTimestamp\": -33015802,\n   \"timeoutTimestamp\": -97044771,\n   \"firstDataSentTimestamp\": 46182221,\n   \"firstDataRcvdTimestamp\": 78808913,\n   \"ipAddress\": \"eiusmod oc\",\n   \"radiusUsername\": \"Ut in non\",\n   \"ssid\": \"non ea ex m\",\n   \"radioType\": \"is5GHzL\",\n   \"lastEventTimestamp\": 31569188,\n   \"hostname\": \"quis ut\",\n   \"apFingerprint\": \"enim \",\n   \"userAgentStr\": \"elit ea non\",\n   \"lastRxTimestamp\": 95458793,\n   \"lastTxTimestamp\": 14287339,\n   \"cpUsername\": \"ad consequat cillum eiusmod\",\n   \"dhcpDetails\": {\n    \"dhcpServerIp\": \"Lorem dolore\",\n    \"primaryDns\": \"Lorem laborum cons\",\n    \"secondaryDns\": \"irure Duis sit anim\",\n    \"subnetMask\": \"deserunt velit et dolore\",\n    \"gatewayIp\": \"officia velit commodo cillum\",\n    \"leaseStartTimestamp\": -37328748,\n    \"leaseTimeInSeconds\": 82651405,\n    \"firstRequestTimestamp\": 4304876,\n    \"firstOfferTimestamp\": -95858738,\n    \"firstDiscoverTimestamp\": 89337458,\n    \"nakTimestamp\": -23674147,\n    \"fromInternal\": true\n   },\n   \"eapDetails\": {\n    \"eapKey1Timestamp\": 92543738,\n    \"eapKey2Timestamp\": -79795723,\n    \"eapKey3Timestamp\": 35157597,\n    \"eapKey4Timestamp\": 8288778,\n    \"requestIdentityTimestamp\": -45242558,\n    \"eapNegotiationStartTimestamp\": -66145561,\n    \"eapSuccessTimestamp\": -52907649\n   },\n   \"metricDetails\": {\n    \"rxBytes\": -64040747,\n    \"txBytes\": -49802308,\n    \"totalRxPackets\": -50232592,\n    \"totalTxPackets\": -65051170,\n    \"rxMbps\": 44217073.21566969,\n    \"txMbps\": -61911245.59066621,\n    \"rssi\": 9047151,\n    \"snr\": -39486518,\n    \"rxRateKbps\": -67902406,\n    \"txRateKbps\": 69483824,\n    \"lastMetricTimestamp\": -28358648,\n    \"lastRxTimestamp\": -29311297,\n    \"lastTxTimestamp\": -53832872,\n    \"classification\": \"ex voluptate in fugiat\",\n    \"txDataFrames\": -41233405,\n    \"txDataFramesRetried\": 41302801,\n    \"rxDataFrames\": 98423964\n   },\n   \"isReassociation\": true,\n   \"disconnectByApReasonCode\": 73245025,\n   \"disconnectByClientReasonCode\": 4554649,\n   \"disconnectByApInternalReasonCode\": 2051479,\n   \"disconnectByClientInternalReasonCode\": -50908684,\n   \"portEnabledTimestamp\": 44911062,\n   \"is11RUsed\": false,\n   \"is11KUsed\": false,\n   \"is11VUsed\": true,\n   \"securityType\": \"RADIUS\",\n   \"steerType\": \"steer_rsvd\",\n   \"previousValidSessionId\": 61756542,\n   \"lastFailureDetails\": {\n    \"failureTimestamp\": -3871353,\n    \"reasonCode\": 36281124,\n    \"reason\": \"eu\"\n   },\n   \"firstFailureDetails\": {\n    \"failureTimestamp\": -16348657,\n    \"reasonCode\": 95644263,\n    \"reason\": \"voluptate proident\"\n   },\n   \"associationStatus\": -23844099,\n   \"dynamicVlan\": 74782449,\n   \"assocRssi\": -91983467,\n   \"priorSessionId\": -45025098,\n   \"priorEquipmentId\": -84948470,\n   \"classificationName\": \"mollit Lorem\",\n   \"associationState\": \"_802_11_Authenticated\"\n  },\n  \"lastModifiedTimestamp\": -910272\n },\n {\n  \"macAddress\": {\n   \"model_type\": \"<string>\",\n   \"addressAsString\": \"<string>\"\n  },\n  \"customerId\": 32967257,\n  \"equipmentId\": -26878135,\n  \"details\": {\n   \"sessionId\": 56724059,\n   \"authTimestamp\": 74589205,\n   \"assocTimestamp\": -27870584,\n   \"assocInternalSC\": -219842,\n   \"ipTimestamp\": -10070144,\n   \"disconnectByApTimestamp\": -46963538,\n   \"disconnectByClientTimestamp\": -46031267,\n   \"timeoutTimestamp\": 82274631,\n   \"firstDataSentTimestamp\": -82345277,\n   \"firstDataRcvdTimestamp\": -94635193,\n   \"ipAddress\": \"occaecat dolor\",\n   \"radiusUsername\": \"dolor \",\n   \"ssid\": \"nisi labore\",\n   \"radioType\": \"is5GHzL\",\n   \"lastEventTimestamp\": -92371884,\n   \"hostname\": \"cupidatat nostrud ea proident\",\n   \"apFingerprint\": \"sint occaecat eiusmod minim\",\n   \"userAgentStr\": \"voluptate esse\",\n   \"lastRxTimestamp\": -70939157,\n   \"lastTxTimestamp\": 31228536,\n   \"cpUsername\": \"eu enim Duis\",\n   \"dhcpDetails\": {\n    \"dhcpServerIp\": \"sunt\",\n    \"primaryDns\": \"in in sint culpa sed\",\n    \"secondaryDns\": \"quis anim\",\n    \"subnetMask\": \"voluptate adipisicing\",\n    \"gatewayIp\": \"ad\",\n    \"leaseStartTimestamp\": 2001396,\n    \"leaseTimeInSeconds\": 25863214,\n    \"firstRequestTimestamp\": 55608000,\n    \"firstOfferTimestamp\": 31863178,\n    \"firstDiscoverTimestamp\": -34353707,\n    \"nakTimestamp\": -50476201,\n    \"fromInternal\": false\n   },\n   \"eapDetails\": {\n    \"eapKey1Timestamp\": 51245871,\n    \"eapKey2Timestamp\": 56190755,\n    \"eapKey3Timestamp\": -82597350,\n    \"eapKey4Timestamp\": 24623942,\n    \"requestIdentityTimestamp\": -7748101,\n    \"eapNegotiationStartTimestamp\": -65010537,\n    \"eapSuccessTimestamp\": -27720166\n   },\n   \"metricDetails\": {\n    \"rxBytes\": 79887834,\n    \"txBytes\": -88639512,\n    \"totalRxPackets\": 78746221,\n    \"totalTxPackets\": -72162756,\n    \"rxMbps\": 76617373.28021222,\n    \"txMbps\": 99283996.08622712,\n    \"rssi\": -72718528,\n    \"snr\": -10950975,\n    \"rxRateKbps\": 90202711,\n    \"txRateKbps\": -68437596,\n    \"lastMetricTimestamp\": -71620836,\n    \"lastRxTimestamp\": -94686892,\n    \"lastTxTimestamp\": 78525014,\n    \"classification\": \"enim deserunt veniam\",\n    \"txDataFrames\": -19875744,\n    \"txDataFramesRetried\": -66518057,\n    \"rxDataFrames\": -30952213\n   },\n   \"isReassociation\": false,\n   \"disconnectByApReasonCode\": -29617745,\n   \"disconnectByClientReasonCode\": 32126587,\n   \"disconnectByApInternalReasonCode\": 90735163,\n   \"disconnectByClientInternalReasonCode\": 82386769,\n   \"portEnabledTimestamp\": 12604858,\n   \"is11RUsed\": false,\n   \"is11KUsed\": false,\n   \"is11VUsed\": false,\n   \"securityType\": \"PSK\",\n   \"steerType\": \"steer_perimeter\",\n   \"previousValidSessionId\": -47199544,\n   \"lastFailureDetails\": {\n    \"failureTimestamp\": 7251807,\n    \"reasonCode\": 91672143,\n    \"reason\": \"enim ad laborum\"\n   },\n   \"firstFailureDetails\": {\n    \"failureTimestamp\": -61392954,\n    \"reasonCode\": 1890277,\n    \"reason\": \"sit aliqua proident\"\n   },\n   \"associationStatus\": -18928804,\n   \"dynamicVlan\": 18016652,\n   \"assocRssi\": -74306084,\n   \"priorSessionId\": -80747408,\n   \"priorEquipmentId\": 12925745,\n   \"classificationName\": \"ea reprehenderit ut est\",\n   \"associationState\": \"AP_Timeout\"\n  },\n  \"lastModifiedTimestamp\": -61007256\n }\n]"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/client/session/inSet?customerId=<integer>&clientMacs=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"client",
														"session",
														"inSet"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														},
														{
															"key": "clientMacs",
															"value": ""
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								}
							]
						},
						{
							"name": "Update Client",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"macAddress\": {\n        \"model_type\": \"<string>\",\n        \"addressAsString\": \"<string>\"\n    },\n    \"customerId\": \"<integer>\",\n    \"details\": {\n        \"alias\": \"<string>\",\n        \"clientType\": \"<integer>\",\n        \"apFingerprint\": \"<string>\",\n        \"userName\": \"<string>\",\n        \"hostName\": \"<string>\",\n        \"lastUsedCpUsername\": \"<string>\",\n        \"lastUserAgent\": \"<string>\",\n        \"doNotSteer\": \"<boolean>\",\n        \"blocklistDetails\": {\n            \"enabled\": \"<boolean>\",\n            \"startTime\": \"<long>\",\n            \"endTime\": \"<long>\"\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/client",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"client"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"macAddress\": {\n        \"model_type\": \"<string>\",\n        \"addressAsString\": \"<string>\"\n    },\n    \"customerId\": \"<integer>\",\n    \"details\": {\n        \"alias\": \"<string>\",\n        \"clientType\": \"<integer>\",\n        \"apFingerprint\": \"<string>\",\n        \"userName\": \"<string>\",\n        \"hostName\": \"<string>\",\n        \"lastUsedCpUsername\": \"<string>\",\n        \"lastUserAgent\": \"<string>\",\n        \"doNotSteer\": \"<boolean>\",\n        \"blocklistDetails\": {\n            \"enabled\": \"<boolean>\",\n            \"startTime\": \"<long>\",\n            \"endTime\": \"<long>\"\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"macAddress\": {\n  \"model_type\": \"<string>\",\n  \"addressAsString\": \"<string>\"\n },\n \"customerId\": \"<integer>\",\n \"details\": {\n  \"alias\": \"<string>\",\n  \"clientType\": \"<integer>\",\n  \"apFingerprint\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"lastUsedCpUsername\": \"<string>\",\n  \"lastUserAgent\": \"<string>\",\n  \"doNotSteer\": \"<boolean>\",\n  \"blocklistDetails\": {\n   \"enabled\": \"<boolean>\",\n   \"startTime\": \"<long>\",\n   \"endTime\": \"<long>\"\n  }\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"macAddress\": {\n        \"model_type\": \"<string>\",\n        \"addressAsString\": \"<string>\"\n    },\n    \"customerId\": \"<integer>\",\n    \"details\": {\n        \"alias\": \"<string>\",\n        \"clientType\": \"<integer>\",\n        \"apFingerprint\": \"<string>\",\n        \"userName\": \"<string>\",\n        \"hostName\": \"<string>\",\n        \"lastUsedCpUsername\": \"<string>\",\n        \"lastUserAgent\": \"<string>\",\n        \"doNotSteer\": \"<boolean>\",\n        \"blocklistDetails\": {\n            \"enabled\": \"<boolean>\",\n            \"startTime\": \"<long>\",\n            \"endTime\": \"<long>\"\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/client",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get list of Clients for customerId and a set of client MAC addresses.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/client/inSet?customerId=<integer>&clientMacs=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"client",
										"inSet"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "clientMacs",
											"value": "",
											"description": "(Required) Set of client MAC addresses."
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/inSet?customerId=<integer>&clientMacs=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"inSet"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "clientMacs",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/inSet?customerId=<integer>&clientMacs=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"inSet"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "clientMacs",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"macAddress\": {\n   \"model_type\": \"<string>\",\n   \"addressAsString\": \"<string>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"details\": {\n   \"alias\": \"<string>\",\n   \"clientType\": \"<integer>\",\n   \"apFingerprint\": \"<string>\",\n   \"userName\": \"<string>\",\n   \"hostName\": \"<string>\",\n   \"lastUsedCpUsername\": \"<string>\",\n   \"lastUserAgent\": \"<string>\",\n   \"doNotSteer\": \"<boolean>\",\n   \"blocklistDetails\": {\n    \"enabled\": \"<boolean>\",\n    \"startTime\": \"<long>\",\n    \"endTime\": \"<long>\"\n   }\n  },\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n },\n {\n  \"macAddress\": {\n   \"model_type\": \"<string>\",\n   \"addressAsString\": \"<string>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"details\": {\n   \"alias\": \"<string>\",\n   \"clientType\": \"<integer>\",\n   \"apFingerprint\": \"<string>\",\n   \"userName\": \"<string>\",\n   \"hostName\": \"<string>\",\n   \"lastUsedCpUsername\": \"<string>\",\n   \"lastUserAgent\": \"<string>\",\n   \"doNotSteer\": \"<boolean>\",\n   \"blocklistDetails\": {\n    \"enabled\": \"<boolean>\",\n    \"startTime\": \"<long>\",\n    \"endTime\": \"<long>\"\n   }\n  },\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n }\n]"
								}
							]
						},
						{
							"name": "Get list of Clients for customerId and searching by macSubstring.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/client/searchByMac?customerId=<integer>&macSubstring=<string>&sortBy={\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"client",
										"searchByMac"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "macSubstring",
											"value": "<string>",
											"description": "MacAddress search criteria"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/searchByMac?customerId=<integer>&macSubstring=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"searchByMac"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "macSubstring",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"macAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"customerId\": \"<integer>\",\n   \"details\": {\n    \"alias\": \"<string>\",\n    \"clientType\": \"<integer>\",\n    \"apFingerprint\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"lastUsedCpUsername\": \"<string>\",\n    \"lastUserAgent\": \"<string>\",\n    \"doNotSteer\": \"<boolean>\",\n    \"blocklistDetails\": {\n     \"enabled\": \"<boolean>\",\n     \"startTime\": \"<long>\",\n     \"endTime\": \"<long>\"\n    }\n   },\n   \"createdTimestamp\": \"<long>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  },\n  {\n   \"macAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"customerId\": \"<integer>\",\n   \"details\": {\n    \"alias\": \"<string>\",\n    \"clientType\": \"<integer>\",\n    \"apFingerprint\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"lastUsedCpUsername\": \"<string>\",\n    \"lastUserAgent\": \"<string>\",\n    \"doNotSteer\": \"<boolean>\",\n    \"blocklistDetails\": {\n     \"enabled\": \"<boolean>\",\n     \"startTime\": \"<long>\",\n     \"endTime\": \"<long>\"\n    }\n   },\n   \"createdTimestamp\": \"<long>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/searchByMac?customerId=<integer>&macSubstring=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"searchByMac"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "macSubstring",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Retrieves a list of Clients for the customer that are marked as blocked. This per-customer list of blocked clients is pushed to every AP, so it has to be limited in size.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/client/blocked?customerId=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"client",
										"blocked"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) Customer ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/blocked?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"blocked"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/blocked?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"blocked"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"macAddress\": {\n   \"model_type\": \"<string>\",\n   \"addressAsString\": \"<string>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"details\": {\n   \"alias\": \"<string>\",\n   \"clientType\": \"<integer>\",\n   \"apFingerprint\": \"<string>\",\n   \"userName\": \"<string>\",\n   \"hostName\": \"<string>\",\n   \"lastUsedCpUsername\": \"<string>\",\n   \"lastUserAgent\": \"<string>\",\n   \"doNotSteer\": \"<boolean>\",\n   \"blocklistDetails\": {\n    \"enabled\": \"<boolean>\",\n    \"startTime\": \"<long>\",\n    \"endTime\": \"<long>\"\n   }\n  },\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n },\n {\n  \"macAddress\": {\n   \"model_type\": \"<string>\",\n   \"addressAsString\": \"<string>\"\n  },\n  \"customerId\": \"<integer>\",\n  \"details\": {\n   \"alias\": \"<string>\",\n   \"clientType\": \"<integer>\",\n   \"apFingerprint\": \"<string>\",\n   \"userName\": \"<string>\",\n   \"hostName\": \"<string>\",\n   \"lastUsedCpUsername\": \"<string>\",\n   \"lastUserAgent\": \"<string>\",\n   \"doNotSteer\": \"<boolean>\",\n   \"blocklistDetails\": {\n    \"enabled\": \"<boolean>\",\n    \"startTime\": \"<long>\",\n    \"endTime\": \"<long>\"\n   }\n  },\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n }\n]"
								}
							]
						},
						{
							"name": "Get list of clients for a given customer by equipment ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/client/forCustomer?customerId=<integer>&equipmentIds=&sortBy={\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"client",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) Customer ID"
										},
										{
											"key": "equipmentIds",
											"value": "",
											"description": "Equipment ID"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"macAddress\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/forCustomer?customerId=<integer>&equipmentIds=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/client/forCustomer?customerId=<integer>&equipmentIds=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"client",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"macAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"customerId\": \"<integer>\",\n   \"details\": {\n    \"alias\": \"<string>\",\n    \"clientType\": \"<integer>\",\n    \"apFingerprint\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"lastUsedCpUsername\": \"<string>\",\n    \"lastUserAgent\": \"<string>\",\n    \"doNotSteer\": \"<boolean>\",\n    \"blocklistDetails\": {\n     \"enabled\": \"<boolean>\",\n     \"startTime\": \"<long>\",\n     \"endTime\": \"<long>\"\n    }\n   },\n   \"createdTimestamp\": \"<long>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  },\n  {\n   \"macAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"customerId\": \"<integer>\",\n   \"details\": {\n    \"alias\": \"<string>\",\n    \"clientType\": \"<integer>\",\n    \"apFingerprint\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"lastUsedCpUsername\": \"<string>\",\n    \"lastUserAgent\": \"<string>\",\n    \"doNotSteer\": \"<boolean>\",\n    \"blocklistDetails\": {\n     \"enabled\": \"<boolean>\",\n     \"startTime\": \"<long>\",\n     \"endTime\": \"<long>\"\n    }\n   },\n   \"createdTimestamp\": \"<long>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "alarm",
					"item": [
						{
							"name": "Update Alarm",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customerId\": \"<integer>\",\n    \"equipmentId\": \"<long>\",\n    \"alarmCode\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"originatorType\": \"<string>\",\n    \"severity\": \"<string>\",\n    \"scopeType\": \"<string>\",\n    \"scopeId\": \"<string>\",\n    \"details\": {\n        \"message\": \"<string>\",\n        \"affectedEquipmentIds\": [\n            \"<long>\",\n            \"<long>\"\n        ],\n        \"generatedBy\": \"<string>\",\n        \"contextAttrs\": \"<object>\"\n    },\n    \"acknowledged\": \"<boolean>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/alarm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"alarm"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"equipmentId\": \"<long>\",\n    \"alarmCode\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"originatorType\": \"<string>\",\n    \"severity\": \"<string>\",\n    \"scopeType\": \"<string>\",\n    \"scopeId\": \"<string>\",\n    \"details\": {\n        \"message\": \"<string>\",\n        \"affectedEquipmentIds\": [\n            \"<long>\",\n            \"<long>\"\n        ],\n        \"generatedBy\": \"<string>\",\n        \"contextAttrs\": \"<object>\"\n    },\n    \"acknowledged\": \"<boolean>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/alarm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": \"<integer>\",\n \"equipmentId\": \"<long>\",\n \"alarmCode\": \"<string>\",\n \"createdTimestamp\": \"<long>\",\n \"originatorType\": \"<string>\",\n \"severity\": \"<string>\",\n \"scopeType\": \"<string>\",\n \"scopeId\": \"<string>\",\n \"details\": {\n  \"message\": \"<string>\",\n  \"affectedEquipmentIds\": [\n   \"<long>\",\n   \"<long>\"\n  ],\n  \"generatedBy\": \"<string>\",\n  \"contextAttrs\": \"<object>\"\n },\n \"acknowledged\": \"<boolean>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"equipmentId\": \"<long>\",\n    \"alarmCode\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"originatorType\": \"<string>\",\n    \"severity\": \"<string>\",\n    \"scopeType\": \"<string>\",\n    \"scopeId\": \"<string>\",\n    \"details\": {\n        \"message\": \"<string>\",\n        \"affectedEquipmentIds\": [\n            \"<long>\",\n            \"<long>\"\n        ],\n        \"generatedBy\": \"<string>\",\n        \"contextAttrs\": \"<object>\"\n    },\n    \"acknowledged\": \"<boolean>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/alarm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Delete Alarm",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/alarm?customerId=<integer>&equipmentId=<long>&alarmCode=<string>&createdTimestamp=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"alarm"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) "
										},
										{
											"key": "alarmCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "createdTimestamp",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm?customerId=<integer>&equipmentId=<long>&alarmCode=<string>&createdTimestamp=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentId",
													"value": "<long>"
												},
												{
													"key": "alarmCode",
													"value": "<string>"
												},
												{
													"key": "createdTimestamp",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": \"<integer>\",\n \"equipmentId\": \"<long>\",\n \"alarmCode\": \"<string>\",\n \"createdTimestamp\": \"<long>\",\n \"originatorType\": \"<string>\",\n \"severity\": \"<string>\",\n \"scopeType\": \"<string>\",\n \"scopeId\": \"<string>\",\n \"details\": {\n  \"message\": \"<string>\",\n  \"affectedEquipmentIds\": [\n   \"<long>\",\n   \"<long>\"\n  ],\n  \"generatedBy\": \"<string>\",\n  \"contextAttrs\": \"<object>\"\n },\n \"acknowledged\": \"<boolean>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm?customerId=<integer>&equipmentId=<long>&alarmCode=<string>&createdTimestamp=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentId",
													"value": "<long>"
												},
												{
													"key": "alarmCode",
													"value": "<string>"
												},
												{
													"key": "createdTimestamp",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get list of Alarms for customerId, set of equipment ids, and set of alarm codes.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/alarm/forEquipment?customerId=<integer>&equipmentIds=&alarmCodes=&createdAfterTimestamp=-1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"alarm",
										"forEquipment"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "equipmentIds",
											"value": "",
											"description": "(Required) Set of equipment ids. Must not be empty."
										},
										{
											"key": "alarmCodes",
											"value": "",
											"description": "Set of alarm codes. Empty or null means retrieve all."
										},
										{
											"key": "createdAfterTimestamp",
											"value": "-1",
											"description": "retrieve alarms created after the specified time"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/forEquipment?customerId=<integer>&equipmentIds=&alarmCodes=&createdAfterTimestamp=-1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"forEquipment"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "alarmCodes",
													"value": ""
												},
												{
													"key": "createdAfterTimestamp",
													"value": "-1"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/forEquipment?customerId=<integer>&equipmentIds=&alarmCodes=&createdAfterTimestamp=-1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"forEquipment"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "alarmCodes",
													"value": ""
												},
												{
													"key": "createdAfterTimestamp",
													"value": "-1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"customerId\": \"<integer>\",\n  \"equipmentId\": \"<long>\",\n  \"alarmCode\": \"<string>\",\n  \"createdTimestamp\": \"<long>\",\n  \"originatorType\": \"<string>\",\n  \"severity\": \"<string>\",\n  \"scopeType\": \"<string>\",\n  \"scopeId\": \"<string>\",\n  \"details\": {\n   \"message\": \"<string>\",\n   \"affectedEquipmentIds\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"generatedBy\": \"<string>\",\n   \"contextAttrs\": \"<object>\"\n  },\n  \"acknowledged\": \"<boolean>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n },\n {\n  \"customerId\": \"<integer>\",\n  \"equipmentId\": \"<long>\",\n  \"alarmCode\": \"<string>\",\n  \"createdTimestamp\": \"<long>\",\n  \"originatorType\": \"<string>\",\n  \"severity\": \"<string>\",\n  \"scopeType\": \"<string>\",\n  \"scopeId\": \"<string>\",\n  \"details\": {\n   \"message\": \"<string>\",\n   \"affectedEquipmentIds\": [\n    \"<long>\",\n    \"<long>\"\n   ],\n   \"generatedBy\": \"<string>\",\n   \"contextAttrs\": \"<object>\"\n  },\n  \"acknowledged\": \"<boolean>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n }\n]"
								}
							]
						},
						{
							"name": "Get list of Alarms for customerId, optional set of equipment ids, optional set of alarm codes.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/alarm/forCustomer?customerId=<integer>&equipmentIds=&alarmCodes=&createdAfterTimestamp=-1&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"alarm",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "equipmentIds",
											"value": "",
											"description": "Set of equipment ids. Empty or null means retrieve all equipment for the customer."
										},
										{
											"key": "alarmCodes",
											"value": "",
											"description": "Set of alarm codes. Empty or null means retrieve all."
										},
										{
											"key": "createdAfterTimestamp",
											"value": "-1",
											"description": "retrieve alarms created after the specified time"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options"
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/forCustomer?customerId=<integer>&equipmentIds=&alarmCodes=&createdAfterTimestamp=-1&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "alarmCodes",
													"value": ""
												},
												{
													"key": "createdAfterTimestamp",
													"value": "-1"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/forCustomer?customerId=<integer>&equipmentIds=&alarmCodes=&createdAfterTimestamp=-1&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "alarmCodes",
													"value": ""
												},
												{
													"key": "createdAfterTimestamp",
													"value": "-1"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"customerId\": \"<integer>\",\n   \"equipmentId\": \"<long>\",\n   \"alarmCode\": \"<string>\",\n   \"createdTimestamp\": \"<long>\",\n   \"originatorType\": \"<string>\",\n   \"severity\": \"<string>\",\n   \"scopeType\": \"<string>\",\n   \"scopeId\": \"<string>\",\n   \"details\": {\n    \"message\": \"<string>\",\n    \"affectedEquipmentIds\": [\n     \"<long>\",\n     \"<long>\"\n    ],\n    \"generatedBy\": \"<string>\",\n    \"contextAttrs\": \"<object>\"\n   },\n   \"acknowledged\": \"<boolean>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  },\n  {\n   \"customerId\": \"<integer>\",\n   \"equipmentId\": \"<long>\",\n   \"alarmCode\": \"<string>\",\n   \"createdTimestamp\": \"<long>\",\n   \"originatorType\": \"<string>\",\n   \"severity\": \"<string>\",\n   \"scopeType\": \"<string>\",\n   \"scopeId\": \"<string>\",\n   \"details\": {\n    \"message\": \"<string>\",\n    \"affectedEquipmentIds\": [\n     \"<long>\",\n     \"<long>\"\n    ],\n    \"generatedBy\": \"<string>\",\n    \"contextAttrs\": \"<object>\"\n   },\n   \"acknowledged\": \"<boolean>\",\n   \"lastModifiedTimestamp\": \"<long>\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								}
							]
						},
						{
							"name": "Get counts of Alarms for customerId, optional set of equipment ids, optional set of alarm codes.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/alarm/counts?customerId=<integer>&equipmentIds=&alarmCodes=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"alarm",
										"counts"
									],
									"query": [
										{
											"key": "customerId",
											"value": "<integer>",
											"description": "(Required) customer id"
										},
										{
											"key": "equipmentIds",
											"value": "",
											"description": "Set of equipment ids. Empty or null means retrieve for all equipment for the customer."
										},
										{
											"key": "alarmCodes",
											"value": "",
											"description": "Set of alarm codes. Empty or null means retrieve all."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/counts?customerId=<integer>&equipmentIds=&alarmCodes=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"counts"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "alarmCodes",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": -75606842,\n \"countsPerEquipmentIdMap\": {},\n \"totalCountsPerAlarmCodeMap\": {}\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/counts?customerId=<integer>&equipmentIds=&alarmCodes=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"counts"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												},
												{
													"key": "alarmCodes",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Reset accumulated counts of Alarms.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/alarm/resetCounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"alarm",
										"resetCounts"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/resetCounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"resetCounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/alarm/resetCounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"alarm",
												"resetCounts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						}
					]
				},
				{
					"name": "firmware",
					"item": [
						{
							"name": "version",
							"item": [
								{
									"name": "Create new FirmwareVersion",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"modelId\": \"<string>\",\n    \"versionName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"validationMethod\": \"<string>\",\n    \"validationCode\": \"<string>\",\n    \"releaseDate\": \"<long>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"version"
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"modelId\": \"<string>\",\n    \"versionName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"validationMethod\": \"<string>\",\n    \"validationCode\": \"<string>\",\n    \"releaseDate\": \"<long>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"modelId\": \"<string>\",\n    \"versionName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"validationMethod\": \"<string>\",\n    \"validationCode\": \"<string>\",\n    \"releaseDate\": \"<long>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<long>\",\n \"equipmentType\": \"<string>\",\n \"modelId\": \"<string>\",\n \"versionName\": \"<string>\",\n \"description\": \"<string>\",\n \"filename\": \"<string>\",\n \"commit\": \"<string>\",\n \"validationMethod\": \"<string>\",\n \"validationCode\": \"<string>\",\n \"releaseDate\": \"<long>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										}
									]
								},
								{
									"name": "Get FirmwareVersion By Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/version?firmwareVersionId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"version"
											],
											"query": [
												{
													"key": "firmwareVersionId",
													"value": "<long>",
													"description": "(Required) firmwareVersion id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version?firmwareVersionId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													],
													"query": [
														{
															"key": "firmwareVersionId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<long>\",\n \"equipmentType\": \"<string>\",\n \"modelId\": \"<string>\",\n \"versionName\": \"<string>\",\n \"description\": \"<string>\",\n \"filename\": \"<string>\",\n \"commit\": \"<string>\",\n \"validationMethod\": \"<string>\",\n \"validationCode\": \"<string>\",\n \"releaseDate\": \"<long>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version?firmwareVersionId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													],
													"query": [
														{
															"key": "firmwareVersionId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Update FirmwareVersion",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"modelId\": \"<string>\",\n    \"versionName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"validationMethod\": \"<string>\",\n    \"validationCode\": \"<string>\",\n    \"releaseDate\": \"<long>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"version"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"modelId\": \"<string>\",\n    \"versionName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"validationMethod\": \"<string>\",\n    \"validationCode\": \"<string>\",\n    \"releaseDate\": \"<long>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<long>\",\n \"equipmentType\": \"<string>\",\n \"modelId\": \"<string>\",\n \"versionName\": \"<string>\",\n \"description\": \"<string>\",\n \"filename\": \"<string>\",\n \"commit\": \"<string>\",\n \"validationMethod\": \"<string>\",\n \"validationCode\": \"<string>\",\n \"releaseDate\": \"<long>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<long>\",\n    \"equipmentType\": \"<string>\",\n    \"modelId\": \"<string>\",\n    \"versionName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"validationMethod\": \"<string>\",\n    \"validationCode\": \"<string>\",\n    \"releaseDate\": \"<long>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Delete FirmwareVersion",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/version?firmwareVersionId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"version"
											],
											"query": [
												{
													"key": "firmwareVersionId",
													"value": "<long>",
													"description": "(Required) firmwareVersion id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version?firmwareVersionId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													],
													"query": [
														{
															"key": "firmwareVersionId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<long>\",\n \"equipmentType\": \"<string>\",\n \"modelId\": \"<string>\",\n \"versionName\": \"<string>\",\n \"description\": \"<string>\",\n \"filename\": \"<string>\",\n \"commit\": \"<string>\",\n \"validationMethod\": \"<string>\",\n \"validationCode\": \"<string>\",\n \"releaseDate\": \"<long>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version?firmwareVersionId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version"
													],
													"query": [
														{
															"key": "firmwareVersionId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Get FirmwareVersion By name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/version/byName?firmwareVersionName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"version",
												"byName"
											],
											"query": [
												{
													"key": "firmwareVersionName",
													"value": "<string>",
													"description": "(Required) firmwareVersion name"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version/byName?firmwareVersionName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version",
														"byName"
													],
													"query": [
														{
															"key": "firmwareVersionName",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<long>\",\n \"equipmentType\": \"<string>\",\n \"modelId\": \"<string>\",\n \"versionName\": \"<string>\",\n \"description\": \"<string>\",\n \"filename\": \"<string>\",\n \"commit\": \"<string>\",\n \"validationMethod\": \"<string>\",\n \"validationCode\": \"<string>\",\n \"releaseDate\": \"<long>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version/byName?firmwareVersionName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version",
														"byName"
													],
													"query": [
														{
															"key": "firmwareVersionName",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Get FirmwareVersions filtered by equipmentType and optional equipment model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/version/byEquipmentType?equipmentType=<string>&modelId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"version",
												"byEquipmentType"
											],
											"query": [
												{
													"key": "equipmentType",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "modelId",
													"value": "<string>",
													"description": "optional filter by equipment model, if null - then firmware versions for all the equipment models are returned"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version/byEquipmentType?equipmentType=<string>&modelId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version",
														"byEquipmentType"
													],
													"query": [
														{
															"key": "equipmentType",
															"value": "<string>"
														},
														{
															"key": "modelId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<long>\",\n  \"equipmentType\": \"<string>\",\n  \"modelId\": \"<string>\",\n  \"versionName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"commit\": \"<string>\",\n  \"validationMethod\": \"<string>\",\n  \"validationCode\": \"<string>\",\n  \"releaseDate\": \"<long>\",\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n },\n {\n  \"id\": \"<long>\",\n  \"equipmentType\": \"<string>\",\n  \"modelId\": \"<string>\",\n  \"versionName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"commit\": \"<string>\",\n  \"validationMethod\": \"<string>\",\n  \"validationCode\": \"<string>\",\n  \"releaseDate\": \"<long>\",\n  \"createdTimestamp\": \"<long>\",\n  \"lastModifiedTimestamp\": \"<long>\"\n }\n]"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/version/byEquipmentType?equipmentType=<string>&modelId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"version",
														"byEquipmentType"
													],
													"query": [
														{
															"key": "equipmentType",
															"value": "<string>"
														},
														{
															"key": "modelId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								}
							]
						},
						{
							"name": "track",
							"item": [
								{
									"name": "Create new FirmwareTrackRecord",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"recordId\": \"<integer>\",\n    \"trackName\": \"<string>\",\n    \"maintenanceWindow\": {\n        \"timezone\": \"<string>\",\n        \"timeBegin\": {\n            \"hour\": \"<integer>\",\n            \"minute\": \"<integer>\"\n        },\n        \"timeEnd\": {\n            \"hour\": \"<integer>\",\n            \"minute\": \"<integer>\"\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/track",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"track"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"recordId\": \"<integer>\",\n    \"trackName\": \"<string>\",\n    \"maintenanceWindow\": {\n        \"model_type\": \"DailyTimeRangeSchedule\",\n        \"timezone\": \"US/Eastern\",\n        \"timeBegin\": {\n            \"hour\": 22,\n            \"minute\": 1\n        },\n        \"timeEnd\": {\n            \"hour\": 22,\n            \"minute\": 30\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"recordId\": \"<integer>\",\n \"trackName\": \"<string>\",\n \"maintenanceWindow\": {\n  \"model_type\": \"DailyTimeRangeSchedule\",\n  \"timezone\": \"US/Eastern\",\n  \"timeBegin\": {\n   \"hour\": 22,\n   \"minute\": 1\n  },\n  \"timeEnd\": {\n   \"hour\": 22,\n   \"minute\": 30\n  }\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"recordId\": \"<integer>\",\n    \"trackName\": \"<string>\",\n    \"maintenanceWindow\": {\n        \"model_type\": \"DailyTimeRangeSchedule\",\n        \"timezone\": \"US/Eastern\",\n        \"timeBegin\": {\n            \"hour\": 22,\n            \"minute\": 1\n        },\n        \"timeEnd\": {\n            \"hour\": 22,\n            \"minute\": 30\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Get FirmwareTrackRecord By Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/track?firmwareTrackId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"track"
											],
											"query": [
												{
													"key": "firmwareTrackId",
													"value": "<long>",
													"description": "(Required) firmware track id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track?firmwareTrackId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													],
													"query": [
														{
															"key": "firmwareTrackId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"recordId\": \"<integer>\",\n \"trackName\": \"<string>\",\n \"maintenanceWindow\": {\n  \"model_type\": \"DailyTimeRangeSchedule\",\n  \"timezone\": \"US/Eastern\",\n  \"timeBegin\": {\n   \"hour\": 22,\n   \"minute\": 1\n  },\n  \"timeEnd\": {\n   \"hour\": 22,\n   \"minute\": 30\n  }\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track?firmwareTrackId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													],
													"query": [
														{
															"key": "firmwareTrackId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Update FirmwareTrackRecord",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"recordId\": \"<integer>\",\n    \"trackName\": \"<string>\",\n    \"maintenanceWindow\": {\n        \"timezone\": \"<string>\",\n        \"timeBegin\": {\n            \"hour\": \"<integer>\",\n            \"minute\": \"<integer>\"\n        },\n        \"timeEnd\": {\n            \"hour\": \"<integer>\",\n            \"minute\": \"<integer>\"\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/track",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"track"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"recordId\": \"<integer>\",\n    \"trackName\": \"<string>\",\n    \"maintenanceWindow\": {\n        \"model_type\": \"DailyTimeRangeSchedule\",\n        \"timezone\": \"US/Eastern\",\n        \"timeBegin\": {\n            \"hour\": 22,\n            \"minute\": 1\n        },\n        \"timeEnd\": {\n            \"hour\": 22,\n            \"minute\": 30\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"recordId\": \"<integer>\",\n \"trackName\": \"<string>\",\n \"maintenanceWindow\": {\n  \"model_type\": \"DailyTimeRangeSchedule\",\n  \"timezone\": \"US/Eastern\",\n  \"timeBegin\": {\n   \"hour\": 22,\n   \"minute\": 1\n  },\n  \"timeEnd\": {\n   \"hour\": 22,\n   \"minute\": 30\n  }\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"recordId\": \"<integer>\",\n    \"trackName\": \"<string>\",\n    \"maintenanceWindow\": {\n        \"model_type\": \"DailyTimeRangeSchedule\",\n        \"timezone\": \"US/Eastern\",\n        \"timeBegin\": {\n            \"hour\": 22,\n            \"minute\": 1\n        },\n        \"timeEnd\": {\n            \"hour\": 22,\n            \"minute\": 30\n        }\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Delete FirmwareTrackRecord",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/track?firmwareTrackId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"track"
											],
											"query": [
												{
													"key": "firmwareTrackId",
													"value": "<long>",
													"description": "(Required) firmware track id"
												}
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track?firmwareTrackId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													],
													"query": [
														{
															"key": "firmwareTrackId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track?firmwareTrackId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track"
													],
													"query": [
														{
															"key": "firmwareTrackId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"recordId\": \"<integer>\",\n \"trackName\": \"<string>\",\n \"maintenanceWindow\": {\n  \"model_type\": \"DailyTimeRangeSchedule\",\n  \"timezone\": \"US/Eastern\",\n  \"timeBegin\": {\n   \"hour\": 22,\n   \"minute\": 1\n  },\n  \"timeEnd\": {\n   \"hour\": 22,\n   \"minute\": 30\n  }\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										}
									]
								},
								{
									"name": "Get FirmwareTrackRecord By name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/track/byName?firmwareTrackName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"track",
												"byName"
											],
											"query": [
												{
													"key": "firmwareTrackName",
													"value": "<string>",
													"description": "(Required) firmware track name"
												}
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track/byName?firmwareTrackName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track",
														"byName"
													],
													"query": [
														{
															"key": "firmwareTrackName",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/track/byName?firmwareTrackName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"track",
														"byName"
													],
													"query": [
														{
															"key": "firmwareTrackName",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"recordId\": \"<integer>\",\n \"trackName\": \"<string>\",\n \"maintenanceWindow\": {\n  \"model_type\": \"DailyTimeRangeSchedule\",\n  \"timezone\": \"US/Eastern\",\n  \"timeBegin\": {\n   \"hour\": 22,\n   \"minute\": 1\n  },\n  \"timeEnd\": {\n   \"hour\": 22,\n   \"minute\": 30\n  }\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "track Assignment",
							"item": [
								{
									"name": "Get FirmwareTrackAssignmentDetails for a given firmware track name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/trackAssignment?firmwareTrackName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"trackAssignment"
											],
											"query": [
												{
													"key": "firmwareTrackName",
													"value": "<string>",
													"description": "(Required) firmware track name"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/trackAssignment?firmwareTrackName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"trackAssignment"
													],
													"query": [
														{
															"key": "firmwareTrackName",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"trackRecordId\": 37699869,\n  \"firmwareVersionRecordId\": -37512966,\n  \"defaultRevisionForTrack\": false,\n  \"deprecated\": false,\n  \"createdTimestamp\": -58325031,\n  \"lastModifiedTimestamp\": -51177091\n },\n {\n  \"trackRecordId\": -15625659,\n  \"firmwareVersionRecordId\": 31632912,\n  \"defaultRevisionForTrack\": false,\n  \"deprecated\": false,\n  \"createdTimestamp\": -98746238,\n  \"lastModifiedTimestamp\": -56240063\n }\n]"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/trackAssignment?firmwareTrackName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"trackAssignment"
													],
													"query": [
														{
															"key": "firmwareTrackName",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Update FirmwareTrackAssignmentDetails",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"trackRecordId\": -27095508,\n    \"firmwareVersionRecordId\": -5008115,\n    \"defaultRevisionForTrack\": false,\n    \"deprecated\": false,\n    \"createdTimestamp\": -17182024,\n    \"lastModifiedTimestamp\": -27916880\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/trackAssignment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"trackAssignment"
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"trackRecordId\": 90828831,\n    \"firmwareVersionRecordId\": -59382645,\n    \"defaultRevisionForTrack\": false,\n    \"deprecated\": false,\n    \"createdTimestamp\": 98742635,\n    \"lastModifiedTimestamp\": -39200932\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/trackAssignment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"trackAssignment"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"trackRecordId\": 90828831,\n    \"firmwareVersionRecordId\": -59382645,\n    \"defaultRevisionForTrack\": false,\n    \"deprecated\": false,\n    \"createdTimestamp\": 98742635,\n    \"lastModifiedTimestamp\": -39200932\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/trackAssignment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"trackAssignment"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"trackRecordId\": 90828831,\n \"firmwareVersionRecordId\": -59382645,\n \"defaultRevisionForTrack\": false,\n \"deprecated\": false,\n \"createdTimestamp\": 98742635,\n \"lastModifiedTimestamp\": -39200932\n}"
										}
									]
								},
								{
									"name": "Delete FirmwareTrackAssignment",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/trackAssignment?firmwareTrackId=<long>&firmwareVersionId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"trackAssignment"
											],
											"query": [
												{
													"key": "firmwareTrackId",
													"value": "<long>",
													"description": "(Required) firmware track id"
												},
												{
													"key": "firmwareVersionId",
													"value": "<long>",
													"description": "(Required) firmware version id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/trackAssignment?firmwareTrackId=<long>&firmwareVersionId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"trackAssignment"
													],
													"query": [
														{
															"key": "firmwareTrackId",
															"value": "<long>"
														},
														{
															"key": "firmwareVersionId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"trackRecordId\": 90828831,\n \"firmwareVersionRecordId\": -59382645,\n \"defaultRevisionForTrack\": false,\n \"deprecated\": false,\n \"createdTimestamp\": 98742635,\n \"lastModifiedTimestamp\": -39200932\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/trackAssignment?firmwareTrackId=<long>&firmwareVersionId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"trackAssignment"
													],
													"query": [
														{
															"key": "firmwareTrackId",
															"value": "<long>"
														},
														{
															"key": "firmwareVersionId",
															"value": "<long>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								}
							]
						},
						{
							"name": "customer Track",
							"item": [
								{
									"name": "Create new CustomerFirmwareTrackRecord",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"trackRecordId\": \"<long>\",\n    \"settings\": {\n        \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n        \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n        \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n        \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/customerTrack",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"customerTrack"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"trackRecordId\": \"<long>\",\n    \"settings\": {\n        \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n        \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n        \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n        \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"customerId\": \"<integer>\",\n \"trackRecordId\": \"<long>\",\n \"settings\": {\n  \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n  \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n  \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n  \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"trackRecordId\": \"<long>\",\n    \"settings\": {\n        \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n        \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n        \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n        \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Get CustomerFirmwareTrackRecord By customerId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/customerTrack?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"customerTrack"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>",
													"description": "(Required) customer id"
												}
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack?customerId=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack?customerId=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"customerId\": \"<integer>\",\n \"trackRecordId\": \"<long>\",\n \"settings\": {\n  \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n  \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n  \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n  \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										}
									]
								},
								{
									"name": "Update CustomerFirmwareTrackRecord",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"trackRecordId\": \"<long>\",\n    \"settings\": {\n        \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n        \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n        \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n        \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/customerTrack",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"customerTrack"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"trackRecordId\": \"<long>\",\n    \"settings\": {\n        \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n        \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n        \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n        \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"customerId\": \"<integer>\",\n \"trackRecordId\": \"<long>\",\n \"settings\": {\n  \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n  \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n  \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n  \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"trackRecordId\": \"<long>\",\n    \"settings\": {\n        \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n        \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n        \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n        \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n    },\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Delete CustomerFirmwareTrackRecord",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/customerTrack?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"customerTrack"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>",
													"description": "(Required) customer id"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack?customerId=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"customerId\": \"<integer>\",\n \"trackRecordId\": \"<long>\",\n \"settings\": {\n  \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n  \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n  \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n  \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n },\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack?customerId=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack"
													],
													"query": [
														{
															"key": "customerId",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Get default settings for handling automatic firmware upgrades",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/customerTrack/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"customerTrack",
												"default"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack",
														"default"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"autoUpgradeDeprecatedOnBind\": \"DEFAULT\",\n \"autoUpgradeUnknownOnBind\": \"DEFAULT\",\n \"autoUpgradeDeprecatedDuringMaintenance\": \"DEFAULT\",\n \"autoUpgradeUnknownDuringMaintenance\": \"DEFAULT\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/firmware/customerTrack/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"firmware",
														"customerTrack",
														"default"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get equipment models from all known firmware versions filtered by equipmentType",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/firmware/model/byEquipmentType?equipmentType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"firmware",
										"model",
										"byEquipmentType"
									],
									"query": [
										{
											"key": "equipmentType",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/model/byEquipmentType?equipmentType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"model",
												"byEquipmentType"
											],
											"query": [
												{
													"key": "equipmentType",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/firmware/model/byEquipmentType?equipmentType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"firmware",
												"model",
												"byEquipmentType"
											],
											"query": [
												{
													"key": "equipmentType",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n \"sunt\",\n \"sunt minim nulla laboris\"\n]"
								}
							]
						}
					]
				},
				{
					"name": "manufacturer",
					"item": [
						{
							"name": "oui",
							"item": [
								{
									"name": "alias",
									"item": [
										{
											"name": "Update alias for ManufacturerOuiDetails",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"oui\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/alias",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"alias"
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"oui\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"alias"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"oui\": \"<string>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\"\n}"
												},
												{
													"name": "this object is returned in the cases when an API throws an exception",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"oui\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"alias"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
												}
											]
										},
										{
											"name": "Get manufacturer aliases that begin with the given prefix",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/alias?prefix=<string>&maxResults=-1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"alias"
													],
													"query": [
														{
															"key": "prefix",
															"value": "<string>",
															"description": "(Required) prefix for the manufacturer alias"
														},
														{
															"key": "maxResults",
															"value": "-1",
															"description": "(Required) max results to return, use -1 for no limit"
														}
													]
												}
											},
											"response": [
												{
													"name": "this object is returned in the cases when an API throws an exception",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/alias?prefix=<string>&maxResults=-1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"alias"
															],
															"query": [
																{
																	"key": "prefix",
																	"value": "<string>"
																},
																{
																	"key": "maxResults",
																	"value": "-1"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
												},
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/alias?prefix=<string>&maxResults=-1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"alias"
															],
															"query": [
																{
																	"key": "prefix",
																	"value": "<string>"
																},
																{
																	"key": "maxResults",
																	"value": "-1"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n \"sunt\",\n \"sunt minim nulla laboris\"\n]"
												}
											]
										}
									]
								},
								{
									"name": "upload",
									"item": [
										{
											"name": "Upload the gziped OUI DataFile, in the format that is published by IEEE. Latest sanitized IEEE OUI data file (oui.txt.gz) can be obtained from https://linuxnet.ca/ieee/oui/",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<binary>\""
												},
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/upload?fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"upload"
													],
													"query": [
														{
															"key": "fileName",
															"value": "<string>",
															"description": "(Required) file name that is being uploaded"
														}
													]
												}
											},
											"response": [
												{
													"name": "this object is returned in the cases when an API throws an exception",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<binary>\""
														},
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/upload?fileName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"upload"
															],
															"query": [
																{
																	"key": "fileName",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
												},
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<binary>\""
														},
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/upload?fileName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"upload"
															],
															"query": [
																{
																	"key": "fileName",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
												}
											]
										},
										{
											"name": "Upload the gziped OUI DataFile using base64 encoding, in the format that is published by IEEE. Latest sanitized IEEE OUI data file (oui.txt.gz) can be obtained from https://linuxnet.ca/ieee/oui/",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"<base64>\""
												},
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/upload/base64?fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"upload",
														"base64"
													],
													"query": [
														{
															"key": "fileName",
															"value": "<string>",
															"description": "(Required) file name that is being uploaded"
														}
													]
												}
											},
											"response": [
												{
													"name": "this object is returned in the cases when an API throws an exception",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<base64>\""
														},
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/upload/base64?fileName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"upload",
																"base64"
															],
															"query": [
																{
																	"key": "fileName",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
												},
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "\"<base64>\""
														},
														"url": {
															"raw": "{{baseUrl}}/portal/manufacturer/oui/upload/base64?fileName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"portal",
																"manufacturer",
																"oui",
																"upload",
																"base64"
															],
															"query": [
																{
																	"key": "fileName",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create new ManufacturerOuiDetails",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"oui\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer/oui",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer",
												"oui"
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"oui\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"oui\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"oui\": \"<string>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get ManufacturerOuiDetails By oui",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer/oui?oui=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer",
												"oui"
											],
											"query": [
												{
													"key": "oui",
													"value": "<string>",
													"description": "(Required) ManufacturerOuiDetails oui"
												}
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui?oui=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui"
													],
													"query": [
														{
															"key": "oui",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui?oui=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui"
													],
													"query": [
														{
															"key": "oui",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"oui\": \"<string>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete ManufacturerOuiDetails",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer/oui?oui=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer",
												"oui"
											],
											"query": [
												{
													"key": "oui",
													"value": "<string>",
													"description": "(Required) ManufacturerOuiDetails oui"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui?oui=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui"
													],
													"query": [
														{
															"key": "oui",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"oui\": \"<string>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\"\n}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui?oui=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui"
													],
													"query": [
														{
															"key": "oui",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Get Oui List for manufacturer",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer/oui/forManufacturer?manufacturer=<string>&exactMatch=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer",
												"oui",
												"forManufacturer"
											],
											"query": [
												{
													"key": "manufacturer",
													"value": "<string>",
													"description": "(Required) Manufacturer name or alias"
												},
												{
													"key": "exactMatch",
													"value": "<boolean>",
													"description": "(Required) Perform exact match (true) or prefix match (false) for the manufacturer name or alias"
												}
											]
										}
									},
									"response": [
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/forManufacturer?manufacturer=<string>&exactMatch=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"forManufacturer"
													],
													"query": [
														{
															"key": "manufacturer",
															"value": "<string>"
														},
														{
															"key": "exactMatch",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										},
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/forManufacturer?manufacturer=<string>&exactMatch=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"forManufacturer"
													],
													"query": [
														{
															"key": "manufacturer",
															"value": "<string>"
														},
														{
															"key": "exactMatch",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n \"sunt\",\n \"sunt minim nulla laboris\"\n]"
										}
									]
								},
								{
									"name": "Get all ManufacturerOuiDetails",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer/oui/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer",
												"oui",
												"all"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"all"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"oui\": \"<string>\",\n  \"manufacturerName\": \"<string>\",\n  \"manufacturerAlias\": \"<string>\"\n },\n {\n  \"oui\": \"<string>\",\n  \"manufacturerName\": \"<string>\",\n  \"manufacturerAlias\": \"<string>\"\n }\n]"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"all"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								},
								{
									"name": "Get ManufacturerOuiDetails for the list of OUIs",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer/oui/list?ouiList=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer",
												"oui",
												"list"
											],
											"query": [
												{
													"key": "ouiList",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/list?ouiList=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"list"
													],
													"query": [
														{
															"key": "ouiList",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "this object is returned in the cases when an API throws an exception",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: bearer",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/portal/manufacturer/oui/list?ouiList=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portal",
														"manufacturer",
														"oui",
														"list"
													],
													"query": [
														{
															"key": "ouiList",
															"value": ""
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create new ManufacturerDetailsRecord",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/manufacturer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"manufacturer"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Get ManufacturerDetailsRecord By id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/manufacturer?id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"manufacturer"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ManufacturerDetailsRecord id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer?id=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											],
											"query": [
												{
													"key": "id",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer?id=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											],
											"query": [
												{
													"key": "id",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Update ManufacturerDetailsRecord",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/manufacturer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"manufacturer"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerAlias\": \"<string>\",\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Delete ManufacturerDetailsRecord",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/manufacturer?id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"manufacturer"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ManufacturerDetailsRecord id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer?id=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											],
											"query": [
												{
													"key": "id",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/manufacturer?id=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"manufacturer"
											],
											"query": [
												{
													"key": "id",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"manufacturerName\": \"<string>\",\n \"manufacturerAlias\": \"<string>\",\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "equipment Gateway",
					"item": [
						{
							"name": "Request firmware update for a particular equipment.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipmentGateway/requestFirmwareUpdate?equipmentId=<long>&firmwareVersionId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipmentGateway",
										"requestFirmwareUpdate"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) Equipment id for which the firmware update is being requested."
										},
										{
											"key": "firmwareVersionId",
											"value": "<long>",
											"description": "(Required) Id of the firmware version object."
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestFirmwareUpdate?equipmentId=<long>&firmwareVersionId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestFirmwareUpdate"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												},
												{
													"key": "firmwareVersionId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestFirmwareUpdate?equipmentId=<long>&firmwareVersionId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestFirmwareUpdate"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												},
												{
													"key": "firmwareVersionId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
								}
							]
						},
						{
							"name": "Request reboot for a particular equipment.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipmentGateway/requestApReboot?equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipmentGateway",
										"requestApReboot"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) Equipment id for which the reboot is being requested."
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestApReboot?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestApReboot"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestApReboot?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestApReboot"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
								}
							]
						},
						{
							"name": "Request switch of active/inactive sw bank for a particular equipment.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipmentGateway/requestApSwitchSoftwareBank?equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipmentGateway",
										"requestApSwitchSoftwareBank"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) Equipment id for which the switch is being requested."
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestApSwitchSoftwareBank?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestApSwitchSoftwareBank"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestApSwitchSoftwareBank?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestApSwitchSoftwareBank"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
								}
							]
						},
						{
							"name": "Request factory reset for a particular equipment.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipmentGateway/requestApFactoryReset?equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipmentGateway",
										"requestApFactoryReset"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) Equipment id for which the factory reset is being requested."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestApFactoryReset?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestApFactoryReset"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestApFactoryReset?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestApFactoryReset"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Request change of primary and/or backup channels for given frequency bands.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"backupChannel\": \"<object>\",\n    \"primaryChannel\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipmentGateway/requestChannelChange?equipmentId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipmentGateway",
										"requestChannelChange"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "<long>",
											"description": "(Required) Equipment id for which the channel changes are being performed."
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupChannel\": {\n        \"is5GHzL\": 40,\n        \"is2dot4GHz\": 1,\n        \"is5GHzU\": 153\n    },\n    \"primaryChannel\": {\n        \"is5GHzL\": 36,\n        \"is2dot4GHz\": 6,\n        \"is5GHzU\": 149\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestChannelChange?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestChannelChange"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backupChannel\": {\n        \"is5GHzL\": 40,\n        \"is2dot4GHz\": 1,\n        \"is5GHzU\": 153\n    },\n    \"primaryChannel\": {\n        \"is5GHzL\": 36,\n        \"is2dot4GHz\": 6,\n        \"is5GHzU\": 149\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipmentGateway/requestChannelChange?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipmentGateway",
												"requestChannelChange"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "adoption Metrics",
					"item": [
						{
							"name": "Get daily service adoption metrics for a given year filtered by specified equipment ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/adoptionMetrics/perEquipmentPerDay?year=<integer>&equipmentIds=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"adoptionMetrics",
										"perEquipmentPerDay"
									],
									"query": [
										{
											"key": "year",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "equipmentIds",
											"value": "",
											"description": "(Required) filter by equipment ids."
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/perEquipmentPerDay?year=<integer>&equipmentIds=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"perEquipmentPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/perEquipmentPerDay?year=<integer>&equipmentIds=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"perEquipmentPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												},
												{
													"key": "equipmentIds",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"year\": -11765215,\n  \"month\": 86652480,\n  \"weekOfYear\": 92252827,\n  \"dayOfYear\": 98180107,\n  \"customerId\": -42424019,\n  \"locationId\": 9607864,\n  \"equipmentId\": 1091005,\n  \"numUniqueConnectedMacs\": -43473093,\n  \"numBytesUpstream\": -81314719,\n  \"numBytesDownstream\": -89757203\n },\n {\n  \"year\": -84450331,\n  \"month\": 21693753,\n  \"weekOfYear\": 23366822,\n  \"dayOfYear\": 69913922,\n  \"customerId\": 48367590,\n  \"locationId\": -25139452,\n  \"equipmentId\": -72014662,\n  \"numUniqueConnectedMacs\": 72754172,\n  \"numBytesUpstream\": -40380804,\n  \"numBytesDownstream\": 47779913\n }\n]"
								}
							]
						},
						{
							"name": "Get daily service adoption metrics for a given year aggregated by location and filtered by specified location ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/adoptionMetrics/perLocationPerDay?year=<integer>&locationIds=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"adoptionMetrics",
										"perLocationPerDay"
									],
									"query": [
										{
											"key": "year",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "locationIds",
											"value": "",
											"description": "(Required) filter by location ids."
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/perLocationPerDay?year=<integer>&locationIds=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"perLocationPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												},
												{
													"key": "locationIds",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/perLocationPerDay?year=<integer>&locationIds=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"perLocationPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												},
												{
													"key": "locationIds",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"year\": -11765215,\n  \"month\": 86652480,\n  \"weekOfYear\": 92252827,\n  \"dayOfYear\": 98180107,\n  \"customerId\": -42424019,\n  \"locationId\": 9607864,\n  \"equipmentId\": 1091005,\n  \"numUniqueConnectedMacs\": -43473093,\n  \"numBytesUpstream\": -81314719,\n  \"numBytesDownstream\": -89757203\n },\n {\n  \"year\": -84450331,\n  \"month\": 21693753,\n  \"weekOfYear\": 23366822,\n  \"dayOfYear\": 69913922,\n  \"customerId\": 48367590,\n  \"locationId\": -25139452,\n  \"equipmentId\": -72014662,\n  \"numUniqueConnectedMacs\": 72754172,\n  \"numBytesUpstream\": -40380804,\n  \"numBytesDownstream\": 47779913\n }\n]"
								}
							]
						},
						{
							"name": "Get daily service adoption metrics for a given year aggregated by customer and filtered by specified customer ids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/adoptionMetrics/perCustomerPerDay?year=<integer>&customerIds=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"adoptionMetrics",
										"perCustomerPerDay"
									],
									"query": [
										{
											"key": "year",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "customerIds",
											"value": "",
											"description": "(Required) filter by customer ids."
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/perCustomerPerDay?year=<integer>&customerIds=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"perCustomerPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												},
												{
													"key": "customerIds",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"year\": -11765215,\n  \"month\": 86652480,\n  \"weekOfYear\": 92252827,\n  \"dayOfYear\": 98180107,\n  \"customerId\": -42424019,\n  \"locationId\": 9607864,\n  \"equipmentId\": 1091005,\n  \"numUniqueConnectedMacs\": -43473093,\n  \"numBytesUpstream\": -81314719,\n  \"numBytesDownstream\": -89757203\n },\n {\n  \"year\": -84450331,\n  \"month\": 21693753,\n  \"weekOfYear\": 23366822,\n  \"dayOfYear\": 69913922,\n  \"customerId\": 48367590,\n  \"locationId\": -25139452,\n  \"equipmentId\": -72014662,\n  \"numUniqueConnectedMacs\": 72754172,\n  \"numBytesUpstream\": -40380804,\n  \"numBytesDownstream\": 47779913\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/perCustomerPerDay?year=<integer>&customerIds=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"perCustomerPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												},
												{
													"key": "customerIds",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get monthly service adoption metrics for a given year",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerMonth?year=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"adoptionMetrics",
										"allPerMonth"
									],
									"query": [
										{
											"key": "year",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerMonth?year=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"allPerMonth"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"year\": -11765215,\n  \"month\": 86652480,\n  \"weekOfYear\": 92252827,\n  \"dayOfYear\": 98180107,\n  \"customerId\": -42424019,\n  \"locationId\": 9607864,\n  \"equipmentId\": 1091005,\n  \"numUniqueConnectedMacs\": -43473093,\n  \"numBytesUpstream\": -81314719,\n  \"numBytesDownstream\": -89757203\n },\n {\n  \"year\": -84450331,\n  \"month\": 21693753,\n  \"weekOfYear\": 23366822,\n  \"dayOfYear\": 69913922,\n  \"customerId\": 48367590,\n  \"locationId\": -25139452,\n  \"equipmentId\": -72014662,\n  \"numUniqueConnectedMacs\": 72754172,\n  \"numBytesUpstream\": -40380804,\n  \"numBytesDownstream\": 47779913\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerMonth?year=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"allPerMonth"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get weekly service adoption metrics for a given year",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerWeek?year=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"adoptionMetrics",
										"allPerWeek"
									],
									"query": [
										{
											"key": "year",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerWeek?year=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"allPerWeek"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"year\": -11765215,\n  \"month\": 86652480,\n  \"weekOfYear\": 92252827,\n  \"dayOfYear\": 98180107,\n  \"customerId\": -42424019,\n  \"locationId\": 9607864,\n  \"equipmentId\": 1091005,\n  \"numUniqueConnectedMacs\": -43473093,\n  \"numBytesUpstream\": -81314719,\n  \"numBytesDownstream\": -89757203\n },\n {\n  \"year\": -84450331,\n  \"month\": 21693753,\n  \"weekOfYear\": 23366822,\n  \"dayOfYear\": 69913922,\n  \"customerId\": 48367590,\n  \"locationId\": -25139452,\n  \"equipmentId\": -72014662,\n  \"numUniqueConnectedMacs\": 72754172,\n  \"numBytesUpstream\": -40380804,\n  \"numBytesDownstream\": 47779913\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerWeek?year=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"allPerWeek"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								}
							]
						},
						{
							"name": "Get daily service adoption metrics for a given year",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerDay?year=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"adoptionMetrics",
										"allPerDay"
									],
									"query": [
										{
											"key": "year",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerDay?year=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"allPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/adoptionMetrics/allPerDay?year=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"adoptionMetrics",
												"allPerDay"
											],
											"query": [
												{
													"key": "year",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"year\": -11765215,\n  \"month\": 86652480,\n  \"weekOfYear\": 92252827,\n  \"dayOfYear\": 98180107,\n  \"customerId\": -42424019,\n  \"locationId\": 9607864,\n  \"equipmentId\": 1091005,\n  \"numUniqueConnectedMacs\": -43473093,\n  \"numBytesUpstream\": -81314719,\n  \"numBytesDownstream\": -89757203\n },\n {\n  \"year\": -84450331,\n  \"month\": 21693753,\n  \"weekOfYear\": 23366822,\n  \"dayOfYear\": 69913922,\n  \"customerId\": 48367590,\n  \"locationId\": -25139452,\n  \"equipmentId\": -72014662,\n  \"numUniqueConnectedMacs\": 72754172,\n  \"numBytesUpstream\": -40380804,\n  \"numBytesDownstream\": 47779913\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Get list of WLAN Service Metrics for customerId, optional set of equipment ids, optional set of client MAC addresses, optional set of metric data types. Only metrics that are created between specified fromTime and toTime are retrieved.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/serviceMetric/forCustomer?fromTime=<long>&toTime=<long>&customerId=<integer>&equipmentIds=&clientMacs=&dataTypes=&sortBy={\"model_type\":\"<string>\",\"columnName\":\"createdTimestamp\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"createdTimestamp\",\"sortOrder\":\"asc\"}&paginationContext=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"serviceMetric",
								"forCustomer"
							],
							"query": [
								{
									"key": "fromTime",
									"value": "<long>",
									"description": "(Required) Include metrics created after (and including) this timestamp in milliseconds"
								},
								{
									"key": "toTime",
									"value": "<long>",
									"description": "(Required) Include metrics created before (and including) this timestamp in milliseconds"
								},
								{
									"key": "customerId",
									"value": "<integer>",
									"description": "(Required) customer id"
								},
								{
									"key": "equipmentIds",
									"value": "",
									"description": "Set of equipment ids. Empty or null means retrieve metrics for all equipment for the customer."
								},
								{
									"key": "clientMacs",
									"value": "",
									"description": "Set of client MAC addresses. Empty or null means retrieve metrics for all client MACs for the customer."
								},
								{
									"key": "dataTypes",
									"value": "",
									"description": "Set of metric data types. Empty or null means retrieve all."
								},
								{
									"key": "sortBy",
									"value": "{\"model_type\":\"<string>\",\"columnName\":\"createdTimestamp\",\"sortOrder\":\"asc\"}",
									"description": "Sort options. If not provided, then results will be ordered by equipmentId and createdTimestamp."
								},
								{
									"key": "sortBy",
									"value": "{\"model_type\":\"<string>\",\"columnName\":\"createdTimestamp\",\"sortOrder\":\"asc\"}",
									"description": "Sort options. If not provided, then results will be ordered by equipmentId and createdTimestamp."
								},
								{
									"key": "paginationContext",
									"value": "",
									"description": "(Required) pagination context"
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/portal/serviceMetric/forCustomer?fromTime=<long>&toTime=<long>&customerId=<integer>&equipmentIds=&clientMacs=&dataTypes=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"serviceMetric",
										"forCustomer"
									],
									"query": [
										{
											"key": "fromTime",
											"value": "<long>"
										},
										{
											"key": "toTime",
											"value": "<long>"
										},
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "equipmentIds",
											"value": ""
										},
										{
											"key": "clientMacs",
											"value": ""
										},
										{
											"key": "dataTypes",
											"value": ""
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "paginationContext",
											"value": ""
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/portal/serviceMetric/forCustomer?fromTime=<long>&toTime=<long>&customerId=<integer>&equipmentIds=&clientMacs=&dataTypes=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"serviceMetric",
										"forCustomer"
									],
									"query": [
										{
											"key": "fromTime",
											"value": "<long>"
										},
										{
											"key": "toTime",
											"value": "<long>"
										},
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "equipmentIds",
											"value": ""
										},
										{
											"key": "clientMacs",
											"value": ""
										},
										{
											"key": "dataTypes",
											"value": ""
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "paginationContext",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"items\": [\n  {\n   \"customerId\": 36009068,\n   \"equipmentId\": -18823502,\n   \"clientMac\": -30254868,\n   \"clientMacAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"dataType\": \"ApNode\",\n   \"createdTimestamp\": -14870413,\n   \"details\": {\n    \"periodLengthSec\": 9897080,\n    \"clientMacAddressesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"txBytesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"rxBytesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"noiseFloorPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"tunnelMetrics\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"networkProbeMetrics\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"radiusMetrics\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"cloudLinkAvailability\": 47973544,\n    \"cloudLinkLatencyInMs\": 77846799,\n    \"channelUtilizationPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"apPerformance\": {\n     \"freeMemory\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cpuUtilized\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"upTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"camiCrashed\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cpuTemperature\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"lowMemoryReboot\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"ethLinkState\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cloudTxBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cloudRxBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"vlanSubnet\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"radioUtilizationPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"radioStatsPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"mcsStatsPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"wmmQueuesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   }\n  },\n  {\n   \"customerId\": -1519276,\n   \"equipmentId\": 64502443,\n   \"clientMac\": 63263890,\n   \"clientMacAddress\": {\n    \"model_type\": \"<string>\",\n    \"addressAsString\": \"<string>\"\n   },\n   \"dataType\": \"Channel\",\n   \"createdTimestamp\": -27071728,\n   \"details\": {\n    \"periodLengthSec\": 29166009,\n    \"clientMacAddressesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"txBytesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"rxBytesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"noiseFloorPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"tunnelMetrics\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"networkProbeMetrics\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"radiusMetrics\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"cloudLinkAvailability\": -5114123,\n    \"cloudLinkLatencyInMs\": 92750578,\n    \"channelUtilizationPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"apPerformance\": {\n     \"freeMemory\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cpuUtilized\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"upTime\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"camiCrashed\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cpuTemperature\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"lowMemoryReboot\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"ethLinkState\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cloudTxBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"cloudRxBytes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"vlanSubnet\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"radioUtilizationPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"radioStatsPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"mcsStatsPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"wmmQueuesPerRadio\": {\n     \"is5GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzU\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is5GHzL\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"is2dot4GHz\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   }\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
						}
					]
				},
				{
					"name": "Get list of System Events for customerId, optional set of equipment ids, and optional set of data types. Only events that are created between specified fromTime and toTime are retrieved.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/portal/systemEvent/forCustomer?fromTime=<long>&toTime=<long>&customerId=<integer>&equipmentIds=&dataTypes=&sortBy={\"model_type\":\"<string>\",\"columnName\":\"equipmentId\",\"sortOrder\":\"asc\"}&sortBy={\"model_type\":\"<string>\",\"columnName\":\"equipmentId\",\"sortOrder\":\"asc\"}&paginationContext=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"portal",
								"systemEvent",
								"forCustomer"
							],
							"query": [
								{
									"key": "fromTime",
									"value": "<long>",
									"description": "(Required) Include events created after (and including) this timestamp in milliseconds"
								},
								{
									"key": "toTime",
									"value": "<long>",
									"description": "(Required) Include events created before (and including) this timestamp in milliseconds"
								},
								{
									"key": "customerId",
									"value": "<integer>",
									"description": "(Required) customer id"
								},
								{
									"key": "equipmentIds",
									"value": "",
									"description": "Set of equipment ids. Empty or null means retrieve events for all equipment for the customer."
								},
								{
									"key": "dataTypes",
									"value": "",
									"description": "Set of system event data types. Empty or null means retrieve all."
								},
								{
									"key": "sortBy",
									"value": "{\"model_type\":\"<string>\",\"columnName\":\"equipmentId\",\"sortOrder\":\"asc\"}",
									"description": "Sort options. If not provided, then results will be ordered by equipmentId and createdTimestamp."
								},
								{
									"key": "sortBy",
									"value": "{\"model_type\":\"<string>\",\"columnName\":\"equipmentId\",\"sortOrder\":\"asc\"}",
									"description": "Sort options. If not provided, then results will be ordered by equipmentId and createdTimestamp."
								},
								{
									"key": "paginationContext",
									"value": "",
									"description": "(Required) pagination context"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/portal/systemEvent/forCustomer?fromTime=<long>&toTime=<long>&customerId=<integer>&equipmentIds=&dataTypes=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"systemEvent",
										"forCustomer"
									],
									"query": [
										{
											"key": "fromTime",
											"value": "<long>"
										},
										{
											"key": "toTime",
											"value": "<long>"
										},
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "equipmentIds",
											"value": ""
										},
										{
											"key": "dataTypes",
											"value": ""
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "paginationContext",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"items\": [\n  {\n   \"customerId\": -70668329,\n   \"equipmentId\": -5790725,\n   \"dataType\": \"DhcpInformEvent\",\n   \"eventTimestamp\": -84264426,\n   \"details\": {\n    \"eventTimestamp\": -3737761,\n    \"gateway\": {\n     \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"hostname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"ipAddr\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"port\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"gatewayType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"createdTimeStamp\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"lastModifiedTimestamp\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   }\n  },\n  {\n   \"customerId\": -49060766,\n   \"equipmentId\": 91914612,\n   \"dataType\": \"PortalUserRemovedEvent\",\n   \"eventTimestamp\": -21084831,\n   \"details\": {\n    \"eventTimestamp\": -14347792,\n    \"gateway\": {\n     \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"hostname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"ipAddr\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"port\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"gatewayType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"createdTimeStamp\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"lastModifiedTimestamp\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    }\n   }\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/portal/systemEvent/forCustomer?fromTime=<long>&toTime=<long>&customerId=<integer>&equipmentIds=&dataTypes=&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"systemEvent",
										"forCustomer"
									],
									"query": [
										{
											"key": "fromTime",
											"value": "<long>"
										},
										{
											"key": "toTime",
											"value": "<long>"
										},
										{
											"key": "customerId",
											"value": "<integer>"
										},
										{
											"key": "equipmentIds",
											"value": ""
										},
										{
											"key": "dataTypes",
											"value": ""
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "sortBy",
											"value": "[object Object]"
										},
										{
											"key": "paginationContext",
											"value": ""
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
						}
					]
				}
			]
		},
		{
			"name": "filestore/{file Name}",
			"item": [
				{
					"name": "Upload binary file.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"<binary>\""
						},
						"url": {
							"raw": "{{baseUrl}}/filestore/:fileName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filestore",
								":fileName"
							],
							"variable": [
								{
									"key": "fileName",
									"value": "<string>",
									"type": "string",
									"description": "(Required) File name that is being uploaded. File/path delimiters not allowed."
								}
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<binary>\""
								},
								"url": {
									"raw": "{{baseUrl}}/filestore/:fileName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filestore",
										":fileName"
									],
									"variable": [
										{
											"key": "fileName"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<binary>\""
								},
								"url": {
									"raw": "{{baseUrl}}/filestore/:fileName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filestore",
										":fileName"
									],
									"variable": [
										{
											"key": "fileName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ex eiusmod\",\n \"success\": false\n}"
						}
					]
				},
				{
					"name": "Download binary file.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/filestore/:fileName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filestore",
								":fileName"
							],
							"variable": [
								{
									"key": "fileName",
									"value": "<string>",
									"type": "string",
									"description": "(Required) File name to download. File/path delimiters not allowed."
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filestore/:fileName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filestore",
										":fileName"
									],
									"variable": [
										{
											"key": "fileName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "pariatur Excepteur occaecat magna nisi"
						},
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filestore/:fileName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filestore",
										":fileName"
									],
									"variable": [
										{
											"key": "fileName"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
						}
					]
				}
			]
		},
		{
			"name": "Portal proces version info.",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ping",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Added as a part of security scheme: bearer",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"startupTime\": -74691005,\n \"currentTime\": 95225363,\n \"applicationName\": \"cupidatat ipsum\",\n \"hostName\": \"ex\",\n \"commitID\": \"cillum pariatur Excepteu\",\n \"commitDate\": \"sint in\",\n \"projectVersion\": \"consequat\"\n}"
				},
				{
					"name": "this object is returned in the cases when an API throws an exception",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": {
									"content": "Added as a part of security scheme: bearer",
									"type": "text/plain"
								},
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"do culpa\",\n \"path\": \"consectetur\",\n \"timestamp\": -63282835\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "<Bearer Token>",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:9091",
			"type": "string"
		}
	]
}